// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_xfft2real_Loop_realfft_be_descramble_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        filter_buf_0_M_imag_V_address0,
        filter_buf_0_M_imag_V_ce0,
        filter_buf_0_M_imag_V_we0,
        filter_buf_0_M_imag_V_d0,
        filter_buf_1_M_imag_V_address0,
        filter_buf_1_M_imag_V_ce0,
        filter_buf_1_M_imag_V_we0,
        filter_buf_1_M_imag_V_d0,
        filter_buf_0_M_real_V_address0,
        filter_buf_0_M_real_V_ce0,
        filter_buf_0_M_real_V_we0,
        filter_buf_0_M_real_V_d0,
        filter_buf_1_M_real_V_address0,
        filter_buf_1_M_real_V_ce0,
        filter_buf_1_M_real_V_we0,
        filter_buf_1_M_real_V_d0,
        descramble_buf_0_M_imag_V_address0,
        descramble_buf_0_M_imag_V_ce0,
        descramble_buf_0_M_imag_V_q0,
        descramble_buf_0_M_imag_V_address1,
        descramble_buf_0_M_imag_V_ce1,
        descramble_buf_0_M_imag_V_q1,
        descramble_buf_1_M_imag_V_address0,
        descramble_buf_1_M_imag_V_ce0,
        descramble_buf_1_M_imag_V_q0,
        descramble_buf_1_M_imag_V_address1,
        descramble_buf_1_M_imag_V_ce1,
        descramble_buf_1_M_imag_V_q1,
        descramble_buf_0_M_real_V_address0,
        descramble_buf_0_M_real_V_ce0,
        descramble_buf_0_M_real_V_q0,
        descramble_buf_0_M_real_V_address1,
        descramble_buf_0_M_real_V_ce1,
        descramble_buf_0_M_real_V_q1,
        descramble_buf_1_M_real_V_address0,
        descramble_buf_1_M_real_V_ce0,
        descramble_buf_1_M_real_V_q0,
        descramble_buf_1_M_real_V_address1,
        descramble_buf_1_M_real_V_ce1,
        descramble_buf_1_M_real_V_q1,
        twid_rom_M_real_V_address0,
        twid_rom_M_real_V_ce0,
        twid_rom_M_real_V_q0,
        twid_rom_M_imag_V_address0,
        twid_rom_M_imag_V_ce0,
        twid_rom_M_imag_V_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [8:0] filter_buf_0_M_imag_V_address0;
output   filter_buf_0_M_imag_V_ce0;
output   filter_buf_0_M_imag_V_we0;
output  [30:0] filter_buf_0_M_imag_V_d0;
output  [8:0] filter_buf_1_M_imag_V_address0;
output   filter_buf_1_M_imag_V_ce0;
output   filter_buf_1_M_imag_V_we0;
output  [30:0] filter_buf_1_M_imag_V_d0;
output  [8:0] filter_buf_0_M_real_V_address0;
output   filter_buf_0_M_real_V_ce0;
output   filter_buf_0_M_real_V_we0;
output  [30:0] filter_buf_0_M_real_V_d0;
output  [8:0] filter_buf_1_M_real_V_address0;
output   filter_buf_1_M_real_V_ce0;
output   filter_buf_1_M_real_V_we0;
output  [30:0] filter_buf_1_M_real_V_d0;
output  [8:0] descramble_buf_0_M_imag_V_address0;
output   descramble_buf_0_M_imag_V_ce0;
input  [31:0] descramble_buf_0_M_imag_V_q0;
output  [8:0] descramble_buf_0_M_imag_V_address1;
output   descramble_buf_0_M_imag_V_ce1;
input  [31:0] descramble_buf_0_M_imag_V_q1;
output  [8:0] descramble_buf_1_M_imag_V_address0;
output   descramble_buf_1_M_imag_V_ce0;
input  [31:0] descramble_buf_1_M_imag_V_q0;
output  [8:0] descramble_buf_1_M_imag_V_address1;
output   descramble_buf_1_M_imag_V_ce1;
input  [31:0] descramble_buf_1_M_imag_V_q1;
output  [8:0] descramble_buf_0_M_real_V_address0;
output   descramble_buf_0_M_real_V_ce0;
input  [31:0] descramble_buf_0_M_real_V_q0;
output  [8:0] descramble_buf_0_M_real_V_address1;
output   descramble_buf_0_M_real_V_ce1;
input  [31:0] descramble_buf_0_M_real_V_q1;
output  [8:0] descramble_buf_1_M_real_V_address0;
output   descramble_buf_1_M_real_V_ce0;
input  [31:0] descramble_buf_1_M_real_V_q0;
output  [8:0] descramble_buf_1_M_real_V_address1;
output   descramble_buf_1_M_real_V_ce1;
input  [31:0] descramble_buf_1_M_real_V_q1;
output  [9:0] twid_rom_M_real_V_address0;
output   twid_rom_M_real_V_ce0;
input  [23:0] twid_rom_M_real_V_q0;
output  [9:0] twid_rom_M_imag_V_address0;
output   twid_rom_M_imag_V_ce0;
input  [23:0] twid_rom_M_imag_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg filter_buf_0_M_imag_V_ce0;
reg filter_buf_0_M_imag_V_we0;
reg filter_buf_1_M_imag_V_ce0;
reg filter_buf_1_M_imag_V_we0;
reg filter_buf_0_M_real_V_ce0;
reg filter_buf_0_M_real_V_we0;
reg filter_buf_1_M_real_V_ce0;
reg filter_buf_1_M_real_V_we0;
reg descramble_buf_0_M_imag_V_ce0;
reg descramble_buf_0_M_imag_V_ce1;
reg descramble_buf_1_M_imag_V_ce0;
reg descramble_buf_1_M_imag_V_ce1;
reg descramble_buf_0_M_real_V_ce0;
reg descramble_buf_0_M_real_V_ce1;
reg descramble_buf_1_M_real_V_ce0;
reg descramble_buf_1_M_real_V_ce1;
reg twid_rom_M_real_V_ce0;
reg twid_rom_M_imag_V_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] filter_rom_i_address0;
reg    filter_rom_i_ce0;
wire   [21:0] filter_rom_i_q0;
reg   [10:0] i_reg_271;
wire   [10:0] add_ln92_fu_283_p2;
reg   [10:0] add_ln92_reg_784;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln92_fu_289_p2;
reg   [0:0] icmp_ln92_reg_789;
wire   [63:0] zext_ln94_fu_303_p1;
reg   [63:0] zext_ln94_reg_793;
wire   [63:0] zext_ln703_fu_319_p1;
reg   [63:0] zext_ln703_reg_813;
reg   [0:0] tmp_1_reg_819;
reg   [0:0] tmp_1_reg_819_pp0_iter1_reg;
wire   [0:0] icmp_ln94_fu_350_p2;
reg   [0:0] icmp_ln94_reg_835;
reg   [0:0] icmp_ln94_reg_835_pp0_iter2_reg;
reg   [0:0] icmp_ln94_reg_835_pp0_iter3_reg;
reg   [0:0] icmp_ln94_reg_835_pp0_iter4_reg;
reg   [0:0] icmp_ln94_reg_835_pp0_iter5_reg;
wire  signed [31:0] lhs_V_fu_356_p3;
reg  signed [31:0] lhs_V_reg_840;
reg  signed [31:0] lhs_V_reg_840_pp0_iter2_reg;
reg  signed [31:0] lhs_V_reg_840_pp0_iter3_reg;
wire   [0:0] icmp_ln97_fu_364_p2;
reg   [0:0] icmp_ln97_reg_857;
reg   [0:0] icmp_ln97_reg_857_pp0_iter2_reg;
reg   [0:0] icmp_ln97_reg_857_pp0_iter3_reg;
wire   [31:0] rhs_V_fu_370_p3;
reg   [31:0] rhs_V_reg_873;
reg   [8:0] filter_buf_0_M_real_V_addr_reg_893;
reg   [8:0] filter_buf_0_M_real_V_addr_reg_893_pp0_iter2_reg;
reg   [8:0] filter_buf_0_M_real_V_addr_reg_893_pp0_iter3_reg;
reg   [8:0] filter_buf_0_M_real_V_addr_reg_893_pp0_iter4_reg;
reg   [8:0] filter_buf_0_M_real_V_addr_reg_893_pp0_iter5_reg;
reg   [8:0] filter_buf_1_M_real_V_addr_reg_898;
reg   [8:0] filter_buf_1_M_real_V_addr_reg_898_pp0_iter2_reg;
reg   [8:0] filter_buf_1_M_real_V_addr_reg_898_pp0_iter3_reg;
reg   [8:0] filter_buf_1_M_real_V_addr_reg_898_pp0_iter4_reg;
reg   [8:0] filter_buf_1_M_real_V_addr_reg_898_pp0_iter5_reg;
reg   [8:0] filter_buf_0_M_imag_V_addr_reg_903;
reg   [8:0] filter_buf_0_M_imag_V_addr_reg_903_pp0_iter2_reg;
reg   [8:0] filter_buf_0_M_imag_V_addr_reg_903_pp0_iter3_reg;
reg   [8:0] filter_buf_0_M_imag_V_addr_reg_903_pp0_iter4_reg;
reg   [8:0] filter_buf_0_M_imag_V_addr_reg_903_pp0_iter5_reg;
reg   [8:0] filter_buf_1_M_imag_V_addr_reg_908;
reg   [8:0] filter_buf_1_M_imag_V_addr_reg_908_pp0_iter2_reg;
reg   [8:0] filter_buf_1_M_imag_V_addr_reg_908_pp0_iter3_reg;
reg   [8:0] filter_buf_1_M_imag_V_addr_reg_908_pp0_iter4_reg;
reg   [8:0] filter_buf_1_M_imag_V_addr_reg_908_pp0_iter5_reg;
wire  signed [31:0] lhs_V_4_fu_377_p3;
reg  signed [31:0] lhs_V_4_reg_913;
reg  signed [31:0] lhs_V_4_reg_913_pp0_iter3_reg;
wire  signed [32:0] sext_ln703_fu_397_p1;
reg  signed [32:0] sext_ln703_reg_919;
reg  signed [32:0] sext_ln703_reg_919_pp0_iter3_reg;
wire  signed [32:0] sext_ln703_1_fu_400_p1;
reg  signed [32:0] sext_ln703_1_reg_924;
reg  signed [32:0] sext_ln703_1_reg_924_pp0_iter3_reg;
wire  signed [32:0] sext_ln703_2_fu_409_p1;
reg  signed [32:0] sext_ln703_2_reg_929;
reg  signed [32:0] sext_ln703_2_reg_929_pp0_iter3_reg;
wire  signed [32:0] sext_ln703_3_fu_413_p1;
reg  signed [32:0] sext_ln703_3_reg_934;
reg  signed [32:0] sext_ln703_3_reg_934_pp0_iter3_reg;
reg   [0:0] tmp_4_reg_939;
reg   [31:0] trunc_ln1148_7_reg_944;
wire   [31:0] sub_ln1148_5_fu_457_p2;
reg   [31:0] sub_ln1148_5_reg_949;
wire   [31:0] g_M_imag_V_fu_503_p3;
reg   [31:0] g_M_imag_V_reg_954;
reg   [23:0] twid_rom_M_real_V_load_reg_959;
reg   [23:0] twid_rom_M_imag_V_load_reg_964;
reg   [21:0] filter_rom_i_load_reg_969;
reg   [21:0] filter_rom_i_load_reg_969_pp0_iter3_reg;
reg   [21:0] filter_rom_i_load_reg_969_pp0_iter4_reg;
wire   [62:0] r_V_4_fu_534_p2;
reg   [62:0] r_V_4_reg_974;
wire   [62:0] r_V_1_fu_540_p2;
reg   [62:0] r_V_1_reg_979;
wire   [62:0] r_V_5_fu_557_p2;
reg   [62:0] r_V_5_reg_984;
wire   [62:0] r_V_3_fu_563_p2;
reg   [62:0] r_V_3_reg_989;
wire   [31:0] cdata_M_imag_V_3_fu_721_p3;
reg  signed [31:0] cdata_M_imag_V_3_reg_994;
wire   [31:0] cdata_M_real_V_3_fu_728_p3;
reg  signed [31:0] cdata_M_real_V_3_reg_999;
reg   [30:0] p_r_V_2_reg_1004;
reg   [30:0] p_r_M_imag_V_3_reg_1010;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [10:0] ap_phi_mux_i_phi_fu_275_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln92_fu_333_p1;
wire   [8:0] trunc_ln94_fu_299_p1;
wire   [9:0] trunc_ln92_fu_295_p1;
wire   [9:0] sub_ln703_fu_309_p2;
wire   [8:0] trunc_ln703_fu_315_p1;
wire   [1:0] tmp_fu_340_p4;
wire   [31:0] select_ln703_fu_384_p3;
wire   [31:0] rhs_V_3_fu_391_p2;
wire   [32:0] ret_V_fu_417_p2;
wire   [32:0] sub_ln1148_4_fu_431_p2;
wire   [31:0] trunc_ln1148_8_fu_447_p4;
wire   [32:0] ret_V_7_fu_403_p2;
wire   [32:0] sub_ln1148_6_fu_471_p2;
wire   [31:0] trunc_ln1148_s_fu_477_p4;
wire   [0:0] tmp_5_fu_463_p3;
wire   [31:0] sub_ln1148_7_fu_497_p2;
wire   [31:0] trunc_ln1148_3_fu_487_p4;
wire   [31:0] g_M_real_V_fu_511_p3;
wire   [31:0] r_V_fu_523_p3;
wire  signed [31:0] r_V_4_fu_534_p0;
wire  signed [62:0] sext_ln1115_fu_530_p1;
wire  signed [31:0] r_V_4_fu_534_p1;
wire  signed [62:0] sext_ln1118_1_fu_520_p1;
wire  signed [31:0] r_V_1_fu_540_p0;
wire  signed [31:0] r_V_1_fu_540_p1;
wire  signed [62:0] sext_ln1118_fu_516_p1;
wire   [31:0] r_V_2_fu_546_p3;
wire  signed [31:0] r_V_5_fu_557_p0;
wire  signed [62:0] sext_ln1115_1_fu_553_p1;
wire  signed [31:0] r_V_5_fu_557_p1;
wire  signed [31:0] r_V_3_fu_563_p0;
wire  signed [31:0] r_V_3_fu_563_p1;
wire   [32:0] ret_V_5_fu_577_p2;
wire   [32:0] sub_ln1148_fu_589_p2;
wire   [31:0] trunc_ln1148_1_fu_595_p4;
wire   [0:0] tmp_2_fu_581_p3;
wire   [31:0] sub_ln1148_1_fu_615_p2;
wire   [31:0] trunc_ln1148_2_fu_605_p4;
wire   [32:0] ret_V_6_fu_629_p2;
wire   [32:0] sub_ln1148_2_fu_641_p2;
wire   [31:0] trunc_ln1148_4_fu_647_p4;
wire   [0:0] tmp_3_fu_633_p3;
wire   [31:0] sub_ln1148_3_fu_667_p2;
wire   [31:0] trunc_ln1148_5_fu_657_p4;
wire   [62:0] ret_V_3_fu_685_p2;
wire   [31:0] p_r_V_fu_689_p4;
wire   [31:0] f_M_real_V_fu_621_p3;
wire   [62:0] ret_V_4_fu_681_p2;
wire   [31:0] trunc_ln4_fu_705_p4;
wire   [31:0] f_M_imag_V_fu_673_p3;
wire   [31:0] cdata_M_imag_V_fu_573_p2;
wire   [31:0] p_r_M_imag_V_fu_715_p2;
wire   [31:0] cdata_M_real_V_fu_569_p2;
wire   [31:0] p_r_M_real_V_fu_699_p2;
wire   [29:0] shl_ln_fu_741_p3;
wire   [29:0] r_V_9_fu_752_p1;
wire   [61:0] zext_ln1118_fu_748_p1;
wire   [29:0] r_V_7_fu_758_p1;
wire   [61:0] r_V_7_fu_758_p2;
wire   [61:0] r_V_9_fu_752_p2;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

hls_xfft2real_Loop_realfft_be_descramble_proc_filter_rom_i #(
    .DataWidth( 22 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
filter_rom_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(filter_rom_i_address0),
    .ce0(filter_rom_i_ce0),
    .q0(filter_rom_i_q0)
);

hls_xfft2real_mul_32s_32s_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32s_32s_63_1_1_U11(
    .din0(r_V_4_fu_534_p0),
    .din1(r_V_4_fu_534_p1),
    .dout(r_V_4_fu_534_p2)
);

hls_xfft2real_mul_32s_32s_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32s_32s_63_1_1_U12(
    .din0(r_V_1_fu_540_p0),
    .din1(r_V_1_fu_540_p1),
    .dout(r_V_1_fu_540_p2)
);

hls_xfft2real_mul_32s_32s_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32s_32s_63_1_1_U13(
    .din0(r_V_5_fu_557_p0),
    .din1(r_V_5_fu_557_p1),
    .dout(r_V_5_fu_557_p2)
);

hls_xfft2real_mul_32s_32s_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32s_32s_63_1_1_U14(
    .din0(r_V_3_fu_563_p0),
    .din1(r_V_3_fu_563_p1),
    .dout(r_V_3_fu_563_p2)
);

hls_xfft2real_mul_32s_30ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 62 ))
mul_32s_30ns_62_1_1_U15(
    .din0(cdata_M_imag_V_3_reg_994),
    .din1(r_V_9_fu_752_p1),
    .dout(r_V_9_fu_752_p2)
);

hls_xfft2real_mul_32s_30ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 62 ))
mul_32s_30ns_62_1_1_U16(
    .din0(cdata_M_real_V_3_reg_999),
    .din1(r_V_7_fu_758_p1),
    .dout(r_V_7_fu_758_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_271 <= 11'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln92_reg_789 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_271 <= add_ln92_reg_784;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln92_reg_784 <= add_ln92_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        cdata_M_imag_V_3_reg_994 <= cdata_M_imag_V_3_fu_721_p3;
        cdata_M_real_V_3_reg_999 <= cdata_M_real_V_3_fu_728_p3;
        filter_buf_0_M_imag_V_addr_reg_903_pp0_iter2_reg <= filter_buf_0_M_imag_V_addr_reg_903;
        filter_buf_0_M_imag_V_addr_reg_903_pp0_iter3_reg <= filter_buf_0_M_imag_V_addr_reg_903_pp0_iter2_reg;
        filter_buf_0_M_imag_V_addr_reg_903_pp0_iter4_reg <= filter_buf_0_M_imag_V_addr_reg_903_pp0_iter3_reg;
        filter_buf_0_M_imag_V_addr_reg_903_pp0_iter5_reg <= filter_buf_0_M_imag_V_addr_reg_903_pp0_iter4_reg;
        filter_buf_0_M_real_V_addr_reg_893_pp0_iter2_reg <= filter_buf_0_M_real_V_addr_reg_893;
        filter_buf_0_M_real_V_addr_reg_893_pp0_iter3_reg <= filter_buf_0_M_real_V_addr_reg_893_pp0_iter2_reg;
        filter_buf_0_M_real_V_addr_reg_893_pp0_iter4_reg <= filter_buf_0_M_real_V_addr_reg_893_pp0_iter3_reg;
        filter_buf_0_M_real_V_addr_reg_893_pp0_iter5_reg <= filter_buf_0_M_real_V_addr_reg_893_pp0_iter4_reg;
        filter_buf_1_M_imag_V_addr_reg_908_pp0_iter2_reg <= filter_buf_1_M_imag_V_addr_reg_908;
        filter_buf_1_M_imag_V_addr_reg_908_pp0_iter3_reg <= filter_buf_1_M_imag_V_addr_reg_908_pp0_iter2_reg;
        filter_buf_1_M_imag_V_addr_reg_908_pp0_iter4_reg <= filter_buf_1_M_imag_V_addr_reg_908_pp0_iter3_reg;
        filter_buf_1_M_imag_V_addr_reg_908_pp0_iter5_reg <= filter_buf_1_M_imag_V_addr_reg_908_pp0_iter4_reg;
        filter_buf_1_M_real_V_addr_reg_898_pp0_iter2_reg <= filter_buf_1_M_real_V_addr_reg_898;
        filter_buf_1_M_real_V_addr_reg_898_pp0_iter3_reg <= filter_buf_1_M_real_V_addr_reg_898_pp0_iter2_reg;
        filter_buf_1_M_real_V_addr_reg_898_pp0_iter4_reg <= filter_buf_1_M_real_V_addr_reg_898_pp0_iter3_reg;
        filter_buf_1_M_real_V_addr_reg_898_pp0_iter5_reg <= filter_buf_1_M_real_V_addr_reg_898_pp0_iter4_reg;
        filter_rom_i_load_reg_969 <= filter_rom_i_q0;
        filter_rom_i_load_reg_969_pp0_iter3_reg <= filter_rom_i_load_reg_969;
        filter_rom_i_load_reg_969_pp0_iter4_reg <= filter_rom_i_load_reg_969_pp0_iter3_reg;
        g_M_imag_V_reg_954 <= g_M_imag_V_fu_503_p3;
        icmp_ln94_reg_835_pp0_iter2_reg <= icmp_ln94_reg_835;
        icmp_ln94_reg_835_pp0_iter3_reg <= icmp_ln94_reg_835_pp0_iter2_reg;
        icmp_ln94_reg_835_pp0_iter4_reg <= icmp_ln94_reg_835_pp0_iter3_reg;
        icmp_ln94_reg_835_pp0_iter5_reg <= icmp_ln94_reg_835_pp0_iter4_reg;
        icmp_ln97_reg_857_pp0_iter2_reg <= icmp_ln97_reg_857;
        icmp_ln97_reg_857_pp0_iter3_reg <= icmp_ln97_reg_857_pp0_iter2_reg;
        lhs_V_4_reg_913 <= lhs_V_4_fu_377_p3;
        lhs_V_4_reg_913_pp0_iter3_reg <= lhs_V_4_reg_913;
        lhs_V_reg_840_pp0_iter2_reg <= lhs_V_reg_840;
        lhs_V_reg_840_pp0_iter3_reg <= lhs_V_reg_840_pp0_iter2_reg;
        p_r_M_imag_V_3_reg_1010 <= {{r_V_9_fu_752_p2[61:31]}};
        p_r_V_2_reg_1004 <= {{r_V_7_fu_758_p2[61:31]}};
        sext_ln703_1_reg_924 <= sext_ln703_1_fu_400_p1;
        sext_ln703_1_reg_924_pp0_iter3_reg <= sext_ln703_1_reg_924;
        sext_ln703_2_reg_929 <= sext_ln703_2_fu_409_p1;
        sext_ln703_2_reg_929_pp0_iter3_reg <= sext_ln703_2_reg_929;
        sext_ln703_3_reg_934 <= sext_ln703_3_fu_413_p1;
        sext_ln703_3_reg_934_pp0_iter3_reg <= sext_ln703_3_reg_934;
        sext_ln703_reg_919 <= sext_ln703_fu_397_p1;
        sext_ln703_reg_919_pp0_iter3_reg <= sext_ln703_reg_919;
        sub_ln1148_5_reg_949 <= sub_ln1148_5_fu_457_p2;
        tmp_4_reg_939 <= ret_V_fu_417_p2[32'd32];
        trunc_ln1148_7_reg_944 <= {{sub_ln1148_4_fu_431_p2[32:1]}};
        twid_rom_M_imag_V_load_reg_964 <= twid_rom_M_imag_V_q0;
        twid_rom_M_real_V_load_reg_959 <= twid_rom_M_real_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_0_M_imag_V_addr_reg_903 <= zext_ln94_reg_793;
        filter_buf_0_M_real_V_addr_reg_893 <= zext_ln94_reg_793;
        filter_buf_1_M_imag_V_addr_reg_908 <= zext_ln94_reg_793;
        filter_buf_1_M_real_V_addr_reg_898 <= zext_ln94_reg_793;
        icmp_ln92_reg_789 <= icmp_ln92_fu_289_p2;
        icmp_ln94_reg_835 <= icmp_ln94_fu_350_p2;
        icmp_ln97_reg_857 <= icmp_ln97_fu_364_p2;
        lhs_V_reg_840 <= lhs_V_fu_356_p3;
        rhs_V_reg_873 <= rhs_V_fu_370_p3;
        tmp_1_reg_819_pp0_iter1_reg <= tmp_1_reg_819;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_reg_857_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_1_reg_979 <= r_V_1_fu_540_p2;
        r_V_3_reg_989 <= r_V_3_fu_563_p2;
        r_V_4_reg_974 <= r_V_4_fu_534_p2;
        r_V_5_reg_984 <= r_V_5_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln92_fu_289_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_819 <= sub_ln703_fu_309_p2[32'd9];
        zext_ln703_reg_813[8 : 0] <= zext_ln703_fu_319_p1[8 : 0];
        zext_ln94_reg_793[8 : 0] <= zext_ln94_fu_303_p1[8 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln92_fu_289_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln92_reg_789 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_275_p4 = add_ln92_reg_784;
    end else begin
        ap_phi_mux_i_phi_fu_275_p4 = i_reg_271;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_imag_V_ce0 = 1'b1;
    end else begin
        descramble_buf_0_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_imag_V_ce1 = 1'b1;
    end else begin
        descramble_buf_0_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        descramble_buf_0_M_real_V_ce0 = 1'b1;
    end else begin
        descramble_buf_0_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        descramble_buf_0_M_real_V_ce1 = 1'b1;
    end else begin
        descramble_buf_0_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_imag_V_ce0 = 1'b1;
    end else begin
        descramble_buf_1_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_imag_V_ce1 = 1'b1;
    end else begin
        descramble_buf_1_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        descramble_buf_1_M_real_V_ce0 = 1'b1;
    end else begin
        descramble_buf_1_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        descramble_buf_1_M_real_V_ce1 = 1'b1;
    end else begin
        descramble_buf_1_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_0_M_imag_V_ce0 = 1'b1;
    end else begin
        filter_buf_0_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln94_reg_835_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_0_M_imag_V_we0 = 1'b1;
    end else begin
        filter_buf_0_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_0_M_real_V_ce0 = 1'b1;
    end else begin
        filter_buf_0_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln94_reg_835_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_0_M_real_V_we0 = 1'b1;
    end else begin
        filter_buf_0_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_1_M_imag_V_ce0 = 1'b1;
    end else begin
        filter_buf_1_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln94_reg_835_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_1_M_imag_V_we0 = 1'b1;
    end else begin
        filter_buf_1_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_1_M_real_V_ce0 = 1'b1;
    end else begin
        filter_buf_1_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln94_reg_835_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_buf_1_M_real_V_we0 = 1'b1;
    end else begin
        filter_buf_1_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        filter_rom_i_ce0 = 1'b1;
    end else begin
        filter_rom_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twid_rom_M_imag_V_ce0 = 1'b1;
    end else begin
        twid_rom_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twid_rom_M_real_V_ce0 = 1'b1;
    end else begin
        twid_rom_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln92_fu_289_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln92_fu_289_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln92_fu_283_p2 = (ap_phi_mux_i_phi_fu_275_p4 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cdata_M_imag_V_3_fu_721_p3 = ((icmp_ln97_reg_857_pp0_iter3_reg[0:0] == 1'b1) ? cdata_M_imag_V_fu_573_p2 : p_r_M_imag_V_fu_715_p2);

assign cdata_M_imag_V_fu_573_p2 = ($signed(lhs_V_reg_840_pp0_iter3_reg) - $signed(lhs_V_4_reg_913_pp0_iter3_reg));

assign cdata_M_real_V_3_fu_728_p3 = ((icmp_ln97_reg_857_pp0_iter3_reg[0:0] == 1'b1) ? cdata_M_real_V_fu_569_p2 : p_r_M_real_V_fu_699_p2);

assign cdata_M_real_V_fu_569_p2 = ($signed(lhs_V_4_reg_913_pp0_iter3_reg) + $signed(lhs_V_reg_840_pp0_iter3_reg));

assign descramble_buf_0_M_imag_V_address0 = zext_ln703_reg_813;

assign descramble_buf_0_M_imag_V_address1 = zext_ln94_reg_793;

assign descramble_buf_0_M_real_V_address0 = zext_ln703_fu_319_p1;

assign descramble_buf_0_M_real_V_address1 = zext_ln94_fu_303_p1;

assign descramble_buf_1_M_imag_V_address0 = zext_ln703_reg_813;

assign descramble_buf_1_M_imag_V_address1 = zext_ln94_reg_793;

assign descramble_buf_1_M_real_V_address0 = zext_ln703_fu_319_p1;

assign descramble_buf_1_M_real_V_address1 = zext_ln94_fu_303_p1;

assign f_M_imag_V_fu_673_p3 = ((tmp_3_fu_633_p3[0:0] == 1'b1) ? sub_ln1148_3_fu_667_p2 : trunc_ln1148_5_fu_657_p4);

assign f_M_real_V_fu_621_p3 = ((tmp_2_fu_581_p3[0:0] == 1'b1) ? sub_ln1148_1_fu_615_p2 : trunc_ln1148_2_fu_605_p4);

assign filter_buf_0_M_imag_V_address0 = filter_buf_0_M_imag_V_addr_reg_903_pp0_iter5_reg;

assign filter_buf_0_M_imag_V_d0 = p_r_M_imag_V_3_reg_1010;

assign filter_buf_0_M_real_V_address0 = filter_buf_0_M_real_V_addr_reg_893_pp0_iter5_reg;

assign filter_buf_0_M_real_V_d0 = p_r_V_2_reg_1004;

assign filter_buf_1_M_imag_V_address0 = filter_buf_1_M_imag_V_addr_reg_908_pp0_iter5_reg;

assign filter_buf_1_M_imag_V_d0 = p_r_M_imag_V_3_reg_1010;

assign filter_buf_1_M_real_V_address0 = filter_buf_1_M_real_V_addr_reg_898_pp0_iter5_reg;

assign filter_buf_1_M_real_V_d0 = p_r_V_2_reg_1004;

assign filter_rom_i_address0 = zext_ln92_fu_333_p1;

assign g_M_imag_V_fu_503_p3 = ((tmp_5_fu_463_p3[0:0] == 1'b1) ? sub_ln1148_7_fu_497_p2 : trunc_ln1148_3_fu_487_p4);

assign g_M_real_V_fu_511_p3 = ((tmp_4_reg_939[0:0] == 1'b1) ? trunc_ln1148_7_reg_944 : sub_ln1148_5_reg_949);

assign icmp_ln92_fu_289_p2 = ((ap_phi_mux_i_phi_fu_275_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_350_p2 = ((tmp_fu_340_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_364_p2 = ((i_reg_271 == 11'd0) ? 1'b1 : 1'b0);

assign lhs_V_4_fu_377_p3 = ((icmp_ln94_reg_835[0:0] == 1'b1) ? descramble_buf_0_M_imag_V_q1 : descramble_buf_1_M_imag_V_q1);

assign lhs_V_fu_356_p3 = ((icmp_ln94_fu_350_p2[0:0] == 1'b1) ? descramble_buf_0_M_real_V_q1 : descramble_buf_1_M_real_V_q1);

assign p_r_M_imag_V_fu_715_p2 = (trunc_ln4_fu_705_p4 + f_M_imag_V_fu_673_p3);

assign p_r_M_real_V_fu_699_p2 = (p_r_V_fu_689_p4 + f_M_real_V_fu_621_p3);

assign p_r_V_fu_689_p4 = {{ret_V_3_fu_685_p2[62:31]}};

assign r_V_1_fu_540_p0 = sext_ln1115_fu_530_p1;

assign r_V_1_fu_540_p1 = sext_ln1118_fu_516_p1;

assign r_V_2_fu_546_p3 = {{twid_rom_M_imag_V_load_reg_964}, {8'd0}};

assign r_V_3_fu_563_p0 = sext_ln1115_1_fu_553_p1;

assign r_V_3_fu_563_p1 = sext_ln1118_1_fu_520_p1;

assign r_V_4_fu_534_p0 = sext_ln1115_fu_530_p1;

assign r_V_4_fu_534_p1 = sext_ln1118_1_fu_520_p1;

assign r_V_5_fu_557_p0 = sext_ln1115_1_fu_553_p1;

assign r_V_5_fu_557_p1 = sext_ln1118_fu_516_p1;

assign r_V_7_fu_758_p1 = zext_ln1118_fu_748_p1;

assign r_V_9_fu_752_p1 = zext_ln1118_fu_748_p1;

assign r_V_fu_523_p3 = {{twid_rom_M_real_V_load_reg_959}, {8'd0}};

assign ret_V_3_fu_685_p2 = (r_V_1_reg_979 - r_V_3_reg_989);

assign ret_V_4_fu_681_p2 = (r_V_5_reg_984 + r_V_4_reg_974);

assign ret_V_5_fu_577_p2 = ($signed(sext_ln703_reg_919_pp0_iter3_reg) + $signed(sext_ln703_1_reg_924_pp0_iter3_reg));

assign ret_V_6_fu_629_p2 = ($signed(sext_ln703_3_reg_934_pp0_iter3_reg) + $signed(sext_ln703_2_reg_929_pp0_iter3_reg));

assign ret_V_7_fu_403_p2 = ($signed(sext_ln703_fu_397_p1) - $signed(sext_ln703_1_fu_400_p1));

assign ret_V_fu_417_p2 = ($signed(sext_ln703_3_fu_413_p1) - $signed(sext_ln703_2_fu_409_p1));

assign rhs_V_3_fu_391_p2 = (32'd0 - select_ln703_fu_384_p3);

assign rhs_V_fu_370_p3 = ((tmp_1_reg_819[0:0] == 1'b1) ? descramble_buf_1_M_real_V_q0 : descramble_buf_0_M_real_V_q0);

assign select_ln703_fu_384_p3 = ((tmp_1_reg_819_pp0_iter1_reg[0:0] == 1'b1) ? descramble_buf_1_M_imag_V_q0 : descramble_buf_0_M_imag_V_q0);

assign sext_ln1115_1_fu_553_p1 = $signed(r_V_2_fu_546_p3);

assign sext_ln1115_fu_530_p1 = $signed(r_V_fu_523_p3);

assign sext_ln1118_1_fu_520_p1 = $signed(g_M_imag_V_reg_954);

assign sext_ln1118_fu_516_p1 = $signed(g_M_real_V_fu_511_p3);

assign sext_ln703_1_fu_400_p1 = lhs_V_reg_840;

assign sext_ln703_2_fu_409_p1 = lhs_V_4_fu_377_p3;

assign sext_ln703_3_fu_413_p1 = $signed(rhs_V_3_fu_391_p2);

assign sext_ln703_fu_397_p1 = $signed(rhs_V_reg_873);

assign shl_ln_fu_741_p3 = {{filter_rom_i_load_reg_969_pp0_iter4_reg}, {8'd0}};

assign sub_ln1148_1_fu_615_p2 = (32'd0 - trunc_ln1148_1_fu_595_p4);

assign sub_ln1148_2_fu_641_p2 = (33'd0 - ret_V_6_fu_629_p2);

assign sub_ln1148_3_fu_667_p2 = (32'd0 - trunc_ln1148_4_fu_647_p4);

assign sub_ln1148_4_fu_431_p2 = (33'd0 - ret_V_fu_417_p2);

assign sub_ln1148_5_fu_457_p2 = (32'd0 - trunc_ln1148_8_fu_447_p4);

assign sub_ln1148_6_fu_471_p2 = (33'd0 - ret_V_7_fu_403_p2);

assign sub_ln1148_7_fu_497_p2 = (32'd0 - trunc_ln1148_s_fu_477_p4);

assign sub_ln1148_fu_589_p2 = (33'd0 - ret_V_5_fu_577_p2);

assign sub_ln703_fu_309_p2 = (10'd0 - trunc_ln92_fu_295_p1);

assign tmp_2_fu_581_p3 = ret_V_5_fu_577_p2[32'd32];

assign tmp_3_fu_633_p3 = ret_V_6_fu_629_p2[32'd32];

assign tmp_5_fu_463_p3 = ret_V_7_fu_403_p2[32'd32];

assign tmp_fu_340_p4 = {{i_reg_271[10:9]}};

assign trunc_ln1148_1_fu_595_p4 = {{sub_ln1148_fu_589_p2[32:1]}};

assign trunc_ln1148_2_fu_605_p4 = {{ret_V_5_fu_577_p2[32:1]}};

assign trunc_ln1148_3_fu_487_p4 = {{ret_V_7_fu_403_p2[32:1]}};

assign trunc_ln1148_4_fu_647_p4 = {{sub_ln1148_2_fu_641_p2[32:1]}};

assign trunc_ln1148_5_fu_657_p4 = {{ret_V_6_fu_629_p2[32:1]}};

assign trunc_ln1148_8_fu_447_p4 = {{ret_V_fu_417_p2[32:1]}};

assign trunc_ln1148_s_fu_477_p4 = {{sub_ln1148_6_fu_471_p2[32:1]}};

assign trunc_ln4_fu_705_p4 = {{ret_V_4_fu_681_p2[62:31]}};

assign trunc_ln703_fu_315_p1 = sub_ln703_fu_309_p2[8:0];

assign trunc_ln92_fu_295_p1 = ap_phi_mux_i_phi_fu_275_p4[9:0];

assign trunc_ln94_fu_299_p1 = ap_phi_mux_i_phi_fu_275_p4[8:0];

assign twid_rom_M_imag_V_address0 = zext_ln92_fu_333_p1;

assign twid_rom_M_real_V_address0 = zext_ln92_fu_333_p1;

assign zext_ln1118_fu_748_p1 = shl_ln_fu_741_p3;

assign zext_ln703_fu_319_p1 = trunc_ln703_fu_315_p1;

assign zext_ln92_fu_333_p1 = i_reg_271;

assign zext_ln94_fu_303_p1 = trunc_ln94_fu_299_p1;

always @ (posedge ap_clk) begin
    zext_ln94_reg_793[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln703_reg_813[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //hls_xfft2real_Loop_realfft_be_descramble_proc
