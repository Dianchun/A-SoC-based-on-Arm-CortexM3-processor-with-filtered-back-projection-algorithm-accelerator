-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    din_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    din_V_TVALID : IN STD_LOGIC;
    din_V_TREADY : OUT STD_LOGIC;
    dout_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    dout_V_TVALID : OUT STD_LOGIC;
    dout_V_TREADY : IN STD_LOGIC );
end;


architecture behav of hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal twid_rom_M_real_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal twid_rom_M_real_V_ce0 : STD_LOGIC;
    signal twid_rom_M_real_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal twid_rom_M_imag_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal twid_rom_M_imag_V_ce0 : STD_LOGIC;
    signal twid_rom_M_imag_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal filter_rom_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal filter_rom_ce0 : STD_LOGIC;
    signal filter_rom_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal twid_rom_conj_M_real_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal twid_rom_conj_M_real_V_ce0 : STD_LOGIC;
    signal twid_rom_conj_M_real_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal twid_rom_conj_M_imag_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal twid_rom_conj_M_imag_V_ce0 : STD_LOGIC;
    signal twid_rom_conj_M_imag_V_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal din_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal dout_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal icmp_ln117_reg_1944 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_reg_1944_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal icmp_ln117_reg_1944_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_475 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_2_reg_487 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_fu_499_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln95_fu_555_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln95_reg_1675 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln95_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1680 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1714 : STD_LOGIC_VECTOR (0 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter6_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter8_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter9_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter6_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter8_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter9_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter6_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter8_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter9_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter6_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter8_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter9_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln97_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_1750_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y1_M_real_fu_636_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_real_reg_1754 : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_real_reg_1754_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_real_reg_1754_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_real_reg_1754_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_real_reg_1754_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_imag_fu_644_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_imag_reg_1760 : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_imag_reg_1760_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_imag_reg_1760_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_imag_reg_1760_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_M_imag_reg_1760_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln100_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_1767 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_1767_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_1767_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_1767_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_1767_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_5_fu_669_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_5_reg_1773 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_14_fu_686_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_14_reg_1778 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_14_reg_1778_pp1_iter2_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_14_reg_1778_pp1_iter3_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_14_reg_1778_pp1_iter4_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_14_reg_1778_pp1_iter5_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_16_fu_692_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_16_reg_1785 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_8_reg_1790 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_4_reg_1795 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_15_fu_722_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_15_reg_1815 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_15_reg_1815_pp1_iter3_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_15_reg_1815_pp1_iter4_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_15_reg_1815_pp1_iter5_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal g_M_real_V_fu_774_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_M_real_V_reg_1822 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_M_imag_V_fu_803_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_M_imag_V_reg_1827 : STD_LOGIC_VECTOR (31 downto 0);
    signal twid_rom_M_real_V_load_reg_1832 : STD_LOGIC_VECTOR (23 downto 0);
    signal twid_rom_M_imag_V_load_reg_1837 : STD_LOGIC_VECTOR (23 downto 0);
    signal filter_rom_load_reg_1842 : STD_LOGIC_VECTOR (21 downto 0);
    signal filter_rom_load_reg_1842_pp1_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal filter_rom_load_reg_1842_pp1_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal filter_rom_load_reg_1842_pp1_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal filter_rom_load_reg_1842_pp1_iter6_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1115_fu_823_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln1118_fu_827_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln1115_1_fu_836_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln1118_1_fu_840_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln1148_2_reg_1871 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_5_reg_1876 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_830_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_1_reg_1881 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_843_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_3_reg_1886 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_849_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_4_reg_1891 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_855_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_5_reg_1896 : STD_LOGIC_VECTOR (62 downto 0);
    signal cdata_M_imag_V_3_fu_997_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cdata_M_imag_V_3_reg_1901 : STD_LOGIC_VECTOR (31 downto 0);
    signal cdata_M_real_V_3_fu_1004_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cdata_M_real_V_3_reg_1906 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1118_fu_1021_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_r_V_3_reg_1927 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_r_M_imag_V_reg_1933 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln117_fu_1060_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln117_reg_1939 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state16_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state17_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state22_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state22_io : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state23_io : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln117_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_reg_1944_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_reg_1944_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_reg_1944_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln117_reg_1944_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_1978 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_6_fu_1144_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal rhs_6_reg_1994 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln121_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1999 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1999_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1999_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1999_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1999_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1192_fu_1158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1192_reg_2004 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1192_reg_2004_pp2_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1192_reg_2004_pp2_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1192_reg_2004_pp2_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln703_2_fu_1162_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln703_2_reg_2010 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_19_fu_1180_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_19_reg_2015 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_19_reg_2015_pp2_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_19_reg_2015_pp2_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_19_reg_2015_pp2_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_19_reg_2015_pp2_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_21_fu_1186_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_21_reg_2022 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_2027 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_19_reg_2032 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1192_1_fu_1210_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1192_1_reg_2047 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1192_1_reg_2047_pp2_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1192_1_reg_2047_pp2_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_20_fu_1216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_20_reg_2053 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_20_reg_2053_pp2_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_20_reg_2053_pp2_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_20_reg_2053_pp2_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal g_M_real_V_1_fu_1276_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_M_real_V_1_reg_2060 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_M_imag_V_1_fu_1312_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_M_imag_V_1_reg_2065 : STD_LOGIC_VECTOR (31 downto 0);
    signal twid_rom_conj_M_real_V_load_reg_2071 : STD_LOGIC_VECTOR (23 downto 0);
    signal twid_rom_conj_M_imag_V_load_reg_2076 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1115_4_fu_1333_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln1118_2_fu_1337_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal ret_V_17_fu_1378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_17_reg_2113 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_18_fu_1382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_18_reg_2120 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_12_reg_2127 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_14_reg_2132 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1340_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_12_reg_2137 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_1360_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_13_reg_2142 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_1366_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_14_reg_2147 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_1372_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_15_reg_2152 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state16 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal descramble_buf_0_M_real_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_0_M_real_V_ce0 : STD_LOGIC;
    signal descramble_buf_0_M_real_V_we0 : STD_LOGIC;
    signal descramble_buf_0_M_real_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_0_M_real_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_0_M_real_V_ce1 : STD_LOGIC;
    signal descramble_buf_0_M_real_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_1_M_real_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_1_M_real_V_ce0 : STD_LOGIC;
    signal descramble_buf_1_M_real_V_we0 : STD_LOGIC;
    signal descramble_buf_1_M_real_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_1_M_real_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_1_M_real_V_ce1 : STD_LOGIC;
    signal descramble_buf_1_M_real_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_0_M_imag_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_0_M_imag_V_ce0 : STD_LOGIC;
    signal descramble_buf_0_M_imag_V_we0 : STD_LOGIC;
    signal descramble_buf_0_M_imag_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_0_M_imag_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_0_M_imag_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_0_M_imag_V_ce1 : STD_LOGIC;
    signal descramble_buf_0_M_imag_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_1_M_imag_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_1_M_imag_V_ce0 : STD_LOGIC;
    signal descramble_buf_1_M_imag_V_we0 : STD_LOGIC;
    signal descramble_buf_1_M_imag_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_1_M_imag_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal descramble_buf_1_M_imag_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal descramble_buf_1_M_imag_V_ce1 : STD_LOGIC;
    signal descramble_buf_1_M_imag_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_buf_0_M_real_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_ce0 : STD_LOGIC;
    signal filter_buf_0_M_real_V_we0 : STD_LOGIC;
    signal filter_buf_0_M_real_V_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal filter_buf_0_M_real_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_real_V_ce1 : STD_LOGIC;
    signal filter_buf_0_M_real_V_q1 : STD_LOGIC_VECTOR (30 downto 0);
    signal filter_buf_1_M_real_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_ce0 : STD_LOGIC;
    signal filter_buf_1_M_real_V_we0 : STD_LOGIC;
    signal filter_buf_1_M_real_V_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal filter_buf_1_M_real_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_real_V_ce1 : STD_LOGIC;
    signal filter_buf_1_M_real_V_q1 : STD_LOGIC_VECTOR (30 downto 0);
    signal filter_buf_0_M_imag_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_ce0 : STD_LOGIC;
    signal filter_buf_0_M_imag_V_we0 : STD_LOGIC;
    signal filter_buf_0_M_imag_V_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal filter_buf_0_M_imag_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_0_M_imag_V_ce1 : STD_LOGIC;
    signal filter_buf_0_M_imag_V_q1 : STD_LOGIC_VECTOR (30 downto 0);
    signal filter_buf_1_M_imag_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_ce0 : STD_LOGIC;
    signal filter_buf_1_M_imag_V_we0 : STD_LOGIC;
    signal filter_buf_1_M_imag_V_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal filter_buf_1_M_imag_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal filter_buf_1_M_imag_V_ce1 : STD_LOGIC;
    signal filter_buf_1_M_imag_V_q1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_3171_reg_464 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln86_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i_1_phi_fu_479_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_i_2_phi_fu_491_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln92_fu_533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln97_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln95_fu_613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln119_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln703_1_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln117_fu_1114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0_01001 : BOOLEAN;
    signal tmp_2_fu_541_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_fu_505_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1_fu_523_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln97_fu_571_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln95_fu_567_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln703_fu_587_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln703_fu_593_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_620_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln703_fu_662_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_fu_675_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln703_1_fu_682_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln703_fu_658_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln703_3_fu_719_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln703_2_fu_716_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_fu_728_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln1148_8_fu_748_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_8_fu_742_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_7_fu_734_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_9_fu_764_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_9_fu_758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_10_fu_782_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln1148_s_fu_787_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_11_fu_797_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_809_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_830_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_830_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_fu_816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_843_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_843_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_849_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_849_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_855_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_855_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_4_fu_861_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln1148_6_fu_876_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_5_fu_899_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_5_fu_906_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_3_fu_911_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_928_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_7_fu_935_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_6_fu_940_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_4_fu_957_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal ret_V_5_fu_971_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_r_V_fu_961_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_M_real_V_fu_920_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln6_fu_975_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_M_imag_V_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cdata_M_imag_V_fu_895_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_7_fu_991_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal cdata_M_real_V_fu_891_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_V_fu_985_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_1011_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1025_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1034_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1025_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_1034_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln119_fu_1076_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln117_fu_1072_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln703_2_fu_1088_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln703_1_fu_1094_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_1120_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln119_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_1136_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal rhs_4_fu_1169_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1192_3_fu_1176_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln703_4_fu_1213_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_10_fu_1222_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1193_fu_1228_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln1148_16_fu_1246_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1148_6_fu_1256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_16_fu_1240_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_15_fu_1232_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_17_fu_1266_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_17_fu_1260_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_18_fu_1284_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_18_fu_1289_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1148_7_fu_1299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_19_fu_1306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1148_8_fu_1303_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_11_fu_1319_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1340_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1340_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_10_fu_1326_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1360_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1366_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1372_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1372_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1192_4_fu_1386_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln1148_12_fu_1389_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln1148_14_fu_1405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1192_2_fu_1420_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln1148_fu_1430_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln1148_7_fu_1446_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln1148_1_fu_1436_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1423_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_1_fu_1459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1148_fu_1455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_2_fu_1480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_10_fu_1485_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln1148_11_fu_1499_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1148_1_fu_1495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1473_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_3_fu_1512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1148_2_fu_1508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1148_1_fu_1518_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1148_fu_1465_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_13_fu_1541_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_13_fu_1534_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_13_fu_1554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1148_3_fu_1550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1148_15_fu_1577_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1148_4_fu_1574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1567_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1148_15_fu_1590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1148_5_fu_1586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1115_5_fu_1604_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal ret_V_12_fu_1607_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal ret_V_13_fu_1622_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_r_V_2_fu_1612_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_M_real_V_1_fu_1559_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_3_fu_1626_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_M_imag_V_1_fu_1596_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_6_fu_1642_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_V_6_fu_1636_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1526_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1648_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1340_ce : STD_LOGIC;
    signal grp_fu_1360_ce : STD_LOGIC;
    signal grp_fu_1366_ce : STD_LOGIC;
    signal grp_fu_1372_ce : STD_LOGIC;
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal regslice_both_dout_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal regslice_both_din_V_U_apdone_blk : STD_LOGIC;
    signal din_V_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal din_V_TVALID_int_regslice : STD_LOGIC;
    signal din_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_din_V_U_ack_in : STD_LOGIC;
    signal dout_V_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal dout_V_TVALID_int_regslice : STD_LOGIC;
    signal dout_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dout_V_U_vld_out : STD_LOGIC;
    signal grp_fu_1360_p10 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_1372_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component hls_xfft2real_mul_32s_32s_63_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component hls_xfft2real_mul_32s_30ns_62_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component hls_xfft2real_mul_32s_31ns_62_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component hls_xfft2real_mul_32s_31ns_63_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_tbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_tcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_fdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_tfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_dg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_fkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (30 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (30 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    twid_rom_M_real_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_tbkb
    generic map (
        DataWidth => 24,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_M_real_V_address0,
        ce0 => twid_rom_M_real_V_ce0,
        q0 => twid_rom_M_real_V_q0);

    twid_rom_M_imag_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_tcud
    generic map (
        DataWidth => 24,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_M_imag_V_address0,
        ce0 => twid_rom_M_imag_V_ce0,
        q0 => twid_rom_M_imag_V_q0);

    filter_rom_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_fdEe
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => filter_rom_address0,
        ce0 => filter_rom_ce0,
        q0 => filter_rom_q0);

    twid_rom_conj_M_real_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_tbkb
    generic map (
        DataWidth => 24,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_conj_M_real_V_address0,
        ce0 => twid_rom_conj_M_real_V_ce0,
        q0 => twid_rom_conj_M_real_V_q0);

    twid_rom_conj_M_imag_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_tfYi
    generic map (
        DataWidth => 23,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_conj_M_imag_V_address0,
        ce0 => twid_rom_conj_M_imag_V_ce0,
        q0 => twid_rom_conj_M_imag_V_q0);

    descramble_buf_0_M_real_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_dg8j
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => descramble_buf_0_M_real_V_address0,
        ce0 => descramble_buf_0_M_real_V_ce0,
        we0 => descramble_buf_0_M_real_V_we0,
        d0 => trunc_ln145_fu_505_p1,
        q0 => descramble_buf_0_M_real_V_q0,
        address1 => descramble_buf_0_M_real_V_address1,
        ce1 => descramble_buf_0_M_real_V_ce1,
        q1 => descramble_buf_0_M_real_V_q1);

    descramble_buf_1_M_real_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_dg8j
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => descramble_buf_1_M_real_V_address0,
        ce0 => descramble_buf_1_M_real_V_ce0,
        we0 => descramble_buf_1_M_real_V_we0,
        d0 => trunc_ln145_fu_505_p1,
        q0 => descramble_buf_1_M_real_V_q0,
        address1 => descramble_buf_1_M_real_V_address1,
        ce1 => descramble_buf_1_M_real_V_ce1,
        q1 => descramble_buf_1_M_real_V_q1);

    descramble_buf_0_M_imag_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_dg8j
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => descramble_buf_0_M_imag_V_address0,
        ce0 => descramble_buf_0_M_imag_V_ce0,
        we0 => descramble_buf_0_M_imag_V_we0,
        d0 => descramble_buf_0_M_imag_V_d0,
        q0 => descramble_buf_0_M_imag_V_q0,
        address1 => descramble_buf_0_M_imag_V_address1,
        ce1 => descramble_buf_0_M_imag_V_ce1,
        q1 => descramble_buf_0_M_imag_V_q1);

    descramble_buf_1_M_imag_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_dg8j
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => descramble_buf_1_M_imag_V_address0,
        ce0 => descramble_buf_1_M_imag_V_ce0,
        we0 => descramble_buf_1_M_imag_V_we0,
        d0 => descramble_buf_1_M_imag_V_d0,
        q0 => descramble_buf_1_M_imag_V_q0,
        address1 => descramble_buf_1_M_imag_V_address1,
        ce1 => descramble_buf_1_M_imag_V_ce1,
        q1 => descramble_buf_1_M_imag_V_q1);

    filter_buf_0_M_real_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_fkbM
    generic map (
        DataWidth => 31,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => filter_buf_0_M_real_V_address0,
        ce0 => filter_buf_0_M_real_V_ce0,
        we0 => filter_buf_0_M_real_V_we0,
        d0 => p_r_V_3_reg_1927,
        q0 => filter_buf_0_M_real_V_q0,
        address1 => filter_buf_0_M_real_V_address1,
        ce1 => filter_buf_0_M_real_V_ce1,
        q1 => filter_buf_0_M_real_V_q1);

    filter_buf_1_M_real_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_fkbM
    generic map (
        DataWidth => 31,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => filter_buf_1_M_real_V_address0,
        ce0 => filter_buf_1_M_real_V_ce0,
        we0 => filter_buf_1_M_real_V_we0,
        d0 => p_r_V_3_reg_1927,
        q0 => filter_buf_1_M_real_V_q0,
        address1 => filter_buf_1_M_real_V_address1,
        ce1 => filter_buf_1_M_real_V_ce1,
        q1 => filter_buf_1_M_real_V_q1);

    filter_buf_0_M_imag_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_fkbM
    generic map (
        DataWidth => 31,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => filter_buf_0_M_imag_V_address0,
        ce0 => filter_buf_0_M_imag_V_ce0,
        we0 => filter_buf_0_M_imag_V_we0,
        d0 => p_r_M_imag_V_reg_1933,
        q0 => filter_buf_0_M_imag_V_q0,
        address1 => filter_buf_0_M_imag_V_address1,
        ce1 => filter_buf_0_M_imag_V_ce1,
        q1 => filter_buf_0_M_imag_V_q1);

    filter_buf_1_M_imag_V_U : component hls_xfft2real_xfft2real_complex_ap_fixed_32_1_5_3_0_complex_ap_fixed_32_1_5_3_0_11_true_s_fkbM
    generic map (
        DataWidth => 31,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => filter_buf_1_M_imag_V_address0,
        ce0 => filter_buf_1_M_imag_V_ce0,
        we0 => filter_buf_1_M_imag_V_we0,
        d0 => p_r_M_imag_V_reg_1933,
        q0 => filter_buf_1_M_imag_V_q0,
        address1 => filter_buf_1_M_imag_V_address1,
        ce1 => filter_buf_1_M_imag_V_ce1,
        q1 => filter_buf_1_M_imag_V_q1);

    mul_32s_32s_63_3_1_U1 : component hls_xfft2real_mul_32s_32s_63_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_830_p0,
        din1 => grp_fu_830_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_830_p2);

    mul_32s_32s_63_3_1_U2 : component hls_xfft2real_mul_32s_32s_63_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_843_p0,
        din1 => grp_fu_843_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_843_p2);

    mul_32s_32s_63_3_1_U3 : component hls_xfft2real_mul_32s_32s_63_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_849_p0,
        din1 => grp_fu_849_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_849_p2);

    mul_32s_32s_63_3_1_U4 : component hls_xfft2real_mul_32s_32s_63_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_855_p0,
        din1 => grp_fu_855_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_855_p2);

    mul_32s_30ns_62_3_1_U5 : component hls_xfft2real_mul_32s_30ns_62_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 30,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => cdata_M_real_V_3_reg_1906,
        din1 => grp_fu_1025_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1025_p2);

    mul_32s_30ns_62_3_1_U6 : component hls_xfft2real_mul_32s_30ns_62_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 30,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => cdata_M_imag_V_3_reg_1901,
        din1 => grp_fu_1034_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1034_p2);

    mul_32s_32s_63_3_1_U7 : component hls_xfft2real_mul_32s_32s_63_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1340_p0,
        din1 => grp_fu_1340_p1,
        ce => grp_fu_1340_ce,
        dout => grp_fu_1340_p2);

    mul_32s_31ns_62_3_1_U8 : component hls_xfft2real_mul_32s_31ns_62_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => g_M_imag_V_1_reg_2065,
        din1 => grp_fu_1360_p1,
        ce => grp_fu_1360_ce,
        dout => grp_fu_1360_p2);

    mul_32s_32s_63_3_1_U9 : component hls_xfft2real_mul_32s_32s_63_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1366_p0,
        din1 => g_M_imag_V_1_reg_2065,
        ce => grp_fu_1366_ce,
        dout => grp_fu_1366_p2);

    mul_32s_31ns_63_3_1_U10 : component hls_xfft2real_mul_32s_31ns_63_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1372_p0,
        din1 => grp_fu_1372_p1,
        ce => grp_fu_1372_ce,
        dout => grp_fu_1372_p2);

    regslice_both_din_V_U : component hls_xfft2real_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => din_V_TDATA,
        vld_in => din_V_TVALID,
        ack_in => regslice_both_din_V_U_ack_in,
        data_out => din_V_TDATA_int_regslice,
        vld_out => din_V_TVALID_int_regslice,
        ack_out => din_V_TREADY_int_regslice,
        apdone_blk => regslice_both_din_V_U_apdone_blk);

    regslice_both_dout_V_U : component hls_xfft2real_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => dout_V_TDATA_int_regslice,
        vld_in => dout_V_TVALID_int_regslice,
        ack_in => dout_V_TREADY_int_regslice,
        data_out => dout_V_TDATA,
        vld_out => regslice_both_dout_V_U_vld_out,
        ack_out => dout_V_TREADY,
        apdone_blk => regslice_both_dout_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (regslice_both_dout_V_U_apdone_blk = ap_const_logic_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state16) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state16)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state16);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_1_reg_475 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln95_reg_1680 = ap_const_lv1_0))) then 
                i_1_reg_475 <= add_ln95_reg_1675;
            end if; 
        end if;
    end process;

    i_2_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                i_2_reg_487 <= ap_const_lv11_0;
            elsif (((icmp_ln117_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                i_2_reg_487 <= add_ln117_reg_1939;
            end if; 
        end if;
    end process;

    i_3171_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_fu_549_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1))) then 
                i_3171_reg_464 <= i_fu_499_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_3171_reg_464 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                add_ln117_reg_1939 <= add_ln117_fu_1060_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                add_ln95_reg_1675 <= add_ln95_fu_555_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                cdata_M_imag_V_3_reg_1901 <= cdata_M_imag_V_3_fu_997_p3;
                cdata_M_real_V_3_reg_1906 <= cdata_M_real_V_3_fu_1004_p3;
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter2_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter1_reg;
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter3_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter2_reg;
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter4_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter3_reg;
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter5_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter4_reg;
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter6_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter5_reg;
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter7_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter6_reg;
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter8_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter7_reg;
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter9_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter8_reg;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter2_reg <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter1_reg;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter3_reg <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter2_reg;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter4_reg <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter3_reg;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter5_reg <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter4_reg;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter6_reg <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter5_reg;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter7_reg <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter6_reg;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter8_reg <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter7_reg;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter9_reg <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter8_reg;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter2_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter1_reg;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter3_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter2_reg;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter4_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter3_reg;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter5_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter4_reg;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter6_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter5_reg;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter7_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter6_reg;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter8_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter7_reg;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter9_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter8_reg;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter2_reg <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter1_reg;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter3_reg <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter2_reg;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter4_reg <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter3_reg;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter5_reg <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter4_reg;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter6_reg <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter5_reg;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter7_reg <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter6_reg;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter8_reg <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter7_reg;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter9_reg <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter8_reg;
                filter_rom_load_reg_1842 <= filter_rom_q0;
                filter_rom_load_reg_1842_pp1_iter3_reg <= filter_rom_load_reg_1842;
                filter_rom_load_reg_1842_pp1_iter4_reg <= filter_rom_load_reg_1842_pp1_iter3_reg;
                filter_rom_load_reg_1842_pp1_iter5_reg <= filter_rom_load_reg_1842_pp1_iter4_reg;
                filter_rom_load_reg_1842_pp1_iter6_reg <= filter_rom_load_reg_1842_pp1_iter5_reg;
                g_M_imag_V_reg_1827 <= g_M_imag_V_fu_803_p3;
                g_M_real_V_reg_1822 <= g_M_real_V_fu_774_p3;
                icmp_ln100_reg_1767_pp1_iter2_reg <= icmp_ln100_reg_1767;
                icmp_ln100_reg_1767_pp1_iter3_reg <= icmp_ln100_reg_1767_pp1_iter2_reg;
                icmp_ln100_reg_1767_pp1_iter4_reg <= icmp_ln100_reg_1767_pp1_iter3_reg;
                icmp_ln100_reg_1767_pp1_iter5_reg <= icmp_ln100_reg_1767_pp1_iter4_reg;
                icmp_ln97_reg_1750_pp1_iter2_reg <= icmp_ln97_reg_1750;
                icmp_ln97_reg_1750_pp1_iter3_reg <= icmp_ln97_reg_1750_pp1_iter2_reg;
                icmp_ln97_reg_1750_pp1_iter4_reg <= icmp_ln97_reg_1750_pp1_iter3_reg;
                icmp_ln97_reg_1750_pp1_iter5_reg <= icmp_ln97_reg_1750_pp1_iter4_reg;
                icmp_ln97_reg_1750_pp1_iter6_reg <= icmp_ln97_reg_1750_pp1_iter5_reg;
                icmp_ln97_reg_1750_pp1_iter7_reg <= icmp_ln97_reg_1750_pp1_iter6_reg;
                icmp_ln97_reg_1750_pp1_iter8_reg <= icmp_ln97_reg_1750_pp1_iter7_reg;
                icmp_ln97_reg_1750_pp1_iter9_reg <= icmp_ln97_reg_1750_pp1_iter8_reg;
                p_r_M_imag_V_reg_1933 <= grp_fu_1034_p2(61 downto 31);
                p_r_V_3_reg_1927 <= grp_fu_1025_p2(61 downto 31);
                ret_V_14_reg_1778_pp1_iter2_reg <= ret_V_14_reg_1778;
                ret_V_14_reg_1778_pp1_iter3_reg <= ret_V_14_reg_1778_pp1_iter2_reg;
                ret_V_14_reg_1778_pp1_iter4_reg <= ret_V_14_reg_1778_pp1_iter3_reg;
                ret_V_14_reg_1778_pp1_iter5_reg <= ret_V_14_reg_1778_pp1_iter4_reg;
                ret_V_15_reg_1815_pp1_iter3_reg <= ret_V_15_reg_1815;
                ret_V_15_reg_1815_pp1_iter4_reg <= ret_V_15_reg_1815_pp1_iter3_reg;
                ret_V_15_reg_1815_pp1_iter5_reg <= ret_V_15_reg_1815_pp1_iter4_reg;
                twid_rom_M_imag_V_load_reg_1837 <= twid_rom_M_imag_V_q0;
                twid_rom_M_real_V_load_reg_1832 <= twid_rom_M_real_V_q0;
                y1_M_imag_reg_1760_pp1_iter2_reg <= y1_M_imag_reg_1760;
                y1_M_imag_reg_1760_pp1_iter3_reg <= y1_M_imag_reg_1760_pp1_iter2_reg;
                y1_M_imag_reg_1760_pp1_iter4_reg <= y1_M_imag_reg_1760_pp1_iter3_reg;
                y1_M_imag_reg_1760_pp1_iter5_reg <= y1_M_imag_reg_1760_pp1_iter4_reg;
                y1_M_real_reg_1754_pp1_iter2_reg <= y1_M_real_reg_1754;
                y1_M_real_reg_1754_pp1_iter3_reg <= y1_M_real_reg_1754_pp1_iter2_reg;
                y1_M_real_reg_1754_pp1_iter4_reg <= y1_M_real_reg_1754_pp1_iter3_reg;
                y1_M_real_reg_1754_pp1_iter5_reg <= y1_M_real_reg_1754_pp1_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln95_fu_561_p2 = ap_const_lv1_0))) then
                filter_buf_0_M_imag_V_addr_2_reg_1740 <= zext_ln97_fu_575_p1(9 - 1 downto 0);
                filter_buf_0_M_real_V_addr_2_reg_1730 <= zext_ln97_fu_575_p1(9 - 1 downto 0);
                filter_buf_1_M_imag_V_addr_2_reg_1745 <= zext_ln97_fu_575_p1(9 - 1 downto 0);
                filter_buf_1_M_real_V_addr_2_reg_1735 <= zext_ln97_fu_575_p1(9 - 1 downto 0);
                tmp_4_reg_1714 <= sub_ln703_fu_587_p2(9 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter1_reg <= filter_buf_0_M_imag_V_addr_2_reg_1740;
                filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter1_reg <= filter_buf_0_M_real_V_addr_2_reg_1730;
                filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter1_reg <= filter_buf_1_M_imag_V_addr_2_reg_1745;
                filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter1_reg <= filter_buf_1_M_real_V_addr_2_reg_1735;
                icmp_ln100_reg_1767 <= icmp_ln100_fu_652_p2;
                icmp_ln95_reg_1680 <= icmp_ln95_fu_561_p2;
                icmp_ln97_reg_1750 <= icmp_ln97_fu_630_p2;
                ret_V_14_reg_1778 <= ret_V_14_fu_686_p2;
                ret_V_16_reg_1785 <= ret_V_16_fu_692_p2;
                rhs_5_reg_1773 <= rhs_5_fu_669_p2;
                tmp_8_reg_1790 <= ret_V_16_fu_692_p2(32 downto 32);
                trunc_ln1148_4_reg_1795 <= ret_V_16_fu_692_p2(32 downto 1);
                y1_M_imag_reg_1760 <= y1_M_imag_fu_644_p3;
                y1_M_real_reg_1754 <= y1_M_real_fu_636_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln121_reg_1999 = ap_const_lv1_0) and (icmp_ln117_reg_1944_pp2_iter1_reg = ap_const_lv1_0))) then
                g_M_imag_V_1_reg_2065 <= g_M_imag_V_1_fu_1312_p3;
                g_M_real_V_1_reg_2060 <= g_M_real_V_1_fu_1276_p3;
                ret_V_20_reg_2053 <= ret_V_20_fu_1216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln117_reg_1944 <= icmp_ln117_fu_1066_p2;
                icmp_ln117_reg_1944_pp2_iter1_reg <= icmp_ln117_reg_1944;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                icmp_ln117_reg_1944_pp2_iter2_reg <= icmp_ln117_reg_1944_pp2_iter1_reg;
                icmp_ln117_reg_1944_pp2_iter3_reg <= icmp_ln117_reg_1944_pp2_iter2_reg;
                icmp_ln117_reg_1944_pp2_iter4_reg <= icmp_ln117_reg_1944_pp2_iter3_reg;
                icmp_ln117_reg_1944_pp2_iter5_reg <= icmp_ln117_reg_1944_pp2_iter4_reg;
                icmp_ln117_reg_1944_pp2_iter6_reg <= icmp_ln117_reg_1944_pp2_iter5_reg;
                icmp_ln121_reg_1999_pp2_iter2_reg <= icmp_ln121_reg_1999;
                icmp_ln121_reg_1999_pp2_iter3_reg <= icmp_ln121_reg_1999_pp2_iter2_reg;
                icmp_ln121_reg_1999_pp2_iter4_reg <= icmp_ln121_reg_1999_pp2_iter3_reg;
                icmp_ln121_reg_1999_pp2_iter5_reg <= icmp_ln121_reg_1999_pp2_iter4_reg;
                ret_V_19_reg_2015_pp2_iter2_reg <= ret_V_19_reg_2015;
                ret_V_19_reg_2015_pp2_iter3_reg <= ret_V_19_reg_2015_pp2_iter2_reg;
                ret_V_19_reg_2015_pp2_iter4_reg <= ret_V_19_reg_2015_pp2_iter3_reg;
                ret_V_19_reg_2015_pp2_iter5_reg <= ret_V_19_reg_2015_pp2_iter4_reg;
                ret_V_20_reg_2053_pp2_iter3_reg <= ret_V_20_reg_2053;
                ret_V_20_reg_2053_pp2_iter4_reg <= ret_V_20_reg_2053_pp2_iter3_reg;
                ret_V_20_reg_2053_pp2_iter5_reg <= ret_V_20_reg_2053_pp2_iter4_reg;
                sext_ln1192_1_reg_2047_pp2_iter3_reg <= sext_ln1192_1_reg_2047;
                sext_ln1192_1_reg_2047_pp2_iter4_reg <= sext_ln1192_1_reg_2047_pp2_iter3_reg;
                sext_ln1192_reg_2004_pp2_iter2_reg <= sext_ln1192_reg_2004;
                sext_ln1192_reg_2004_pp2_iter3_reg <= sext_ln1192_reg_2004_pp2_iter2_reg;
                sext_ln1192_reg_2004_pp2_iter4_reg <= sext_ln1192_reg_2004_pp2_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln117_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln121_reg_1999 <= icmp_ln121_fu_1152_p2;
                ret_V_19_reg_2015 <= ret_V_19_fu_1180_p2;
                ret_V_21_reg_2022 <= ret_V_21_fu_1186_p2;
                rhs_6_reg_1994 <= rhs_6_fu_1144_p3;
                select_ln703_2_reg_2010 <= select_ln703_2_fu_1162_p3;
                sext_ln1192_reg_2004 <= sext_ln1192_fu_1158_p1;
                tmp_16_reg_2027 <= ret_V_21_fu_1186_p2(31 downto 31);
                trunc_ln1148_19_reg_2032 <= ret_V_21_fu_1186_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln121_reg_1999_pp2_iter4_reg = ap_const_lv1_0) and (icmp_ln117_reg_1944_pp2_iter4_reg = ap_const_lv1_0))) then
                r_V_12_reg_2137 <= grp_fu_1340_p2;
                r_V_13_reg_2142 <= grp_fu_1360_p2;
                r_V_14_reg_2147 <= grp_fu_1366_p2;
                r_V_15_reg_2152 <= grp_fu_1372_p2;
                trunc_ln1148_12_reg_2127 <= sub_ln1148_12_fu_1389_p2(32 downto 1);
                trunc_ln1148_14_reg_2132 <= sub_ln1148_14_fu_1405_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln100_reg_1767_pp1_iter4_reg = ap_const_lv1_0))) then
                r_V_1_reg_1881 <= grp_fu_830_p2;
                r_V_3_reg_1886 <= grp_fu_843_p2;
                r_V_4_reg_1891 <= grp_fu_849_p2;
                r_V_5_reg_1896 <= grp_fu_855_p2;
                trunc_ln1148_2_reg_1871 <= sub_ln1148_4_fu_861_p2(32 downto 1);
                trunc_ln1148_5_reg_1876 <= sub_ln1148_6_fu_876_p2(32 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln100_reg_1767 = ap_const_lv1_0))) then
                ret_V_15_reg_1815 <= ret_V_15_fu_722_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln121_reg_1999_pp2_iter4_reg = ap_const_lv1_1) and (icmp_ln117_reg_1944_pp2_iter4_reg = ap_const_lv1_0))) then
                ret_V_17_reg_2113 <= ret_V_17_fu_1378_p2;
                ret_V_18_reg_2120 <= ret_V_18_fu_1382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln117_reg_1944_pp2_iter1_reg = ap_const_lv1_0))) then
                sext_ln1192_1_reg_2047 <= sext_ln1192_1_fu_1210_p1;
                twid_rom_conj_M_imag_V_load_reg_2076 <= twid_rom_conj_M_imag_V_q0;
                twid_rom_conj_M_real_V_load_reg_2071 <= twid_rom_conj_M_real_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln117_fu_1066_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                tmp_12_reg_1978 <= sub_ln703_2_fu_1088_p2(9 downto 9);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp1_iter0, icmp_ln95_fu_561_p2, ap_enable_reg_pp2_iter0, icmp_ln117_fu_1066_p2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, icmp_ln86_fu_549_p2, ap_CS_fsm_state24, regslice_both_dout_V_U_apdone_blk, din_V_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln86_fu_549_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln86_fu_549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln95_fu_561_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln95_fu_561_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln117_fu_1066_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln117_fu_1066_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (regslice_both_dout_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln117_fu_1060_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_2_phi_fu_491_p4) + unsigned(ap_const_lv11_1));
    add_ln95_fu_555_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_1_phi_fu_479_p4) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(4);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(6);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_01001_assign_proc : process(ap_enable_reg_pp2_iter6, icmp_ln117_reg_1944_pp2_iter5_reg, ap_enable_reg_pp2_iter7, icmp_ln117_reg_1944_pp2_iter6_reg, dout_V_TREADY_int_regslice)
    begin
                ap_block_pp2_stage0_01001 <= (((icmp_ln117_reg_1944_pp2_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (dout_V_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln117_reg_1944_pp2_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (dout_V_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp2_stage0_11001_assign_proc : process(ap_enable_reg_pp2_iter6, icmp_ln117_reg_1944_pp2_iter5_reg, ap_enable_reg_pp2_iter7, icmp_ln117_reg_1944_pp2_iter6_reg, ap_block_state22_io, ap_block_state23_io, dout_V_TREADY_int_regslice)
    begin
                ap_block_pp2_stage0_11001 <= (((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state23_io) or ((icmp_ln117_reg_1944_pp2_iter6_reg = ap_const_lv1_0) and (dout_V_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp2_iter6 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state22_io) or ((icmp_ln117_reg_1944_pp2_iter5_reg = ap_const_lv1_0) and (dout_V_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(ap_enable_reg_pp2_iter6, icmp_ln117_reg_1944_pp2_iter5_reg, ap_enable_reg_pp2_iter7, icmp_ln117_reg_1944_pp2_iter6_reg, ap_block_state22_io, ap_block_state23_io, dout_V_TREADY_int_regslice)
    begin
                ap_block_pp2_stage0_subdone <= (((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state23_io) or ((icmp_ln117_reg_1944_pp2_iter6_reg = ap_const_lv1_0) and (dout_V_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp2_iter6 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state22_io) or ((icmp_ln117_reg_1944_pp2_iter5_reg = ap_const_lv1_0) and (dout_V_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_io_assign_proc : process(icmp_ln117_reg_1944_pp2_iter5_reg, dout_V_TREADY_int_regslice)
    begin
                ap_block_state22_io <= ((icmp_ln117_reg_1944_pp2_iter5_reg = ap_const_lv1_0) and (dout_V_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state22_pp2_stage0_iter6_assign_proc : process(icmp_ln117_reg_1944_pp2_iter5_reg, dout_V_TREADY_int_regslice)
    begin
                ap_block_state22_pp2_stage0_iter6 <= ((icmp_ln117_reg_1944_pp2_iter5_reg = ap_const_lv1_0) and (dout_V_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state23_io_assign_proc : process(icmp_ln117_reg_1944_pp2_iter6_reg, dout_V_TREADY_int_regslice)
    begin
                ap_block_state23_io <= ((icmp_ln117_reg_1944_pp2_iter6_reg = ap_const_lv1_0) and (dout_V_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state23_pp2_stage0_iter7_assign_proc : process(icmp_ln117_reg_1944_pp2_iter6_reg, dout_V_TREADY_int_regslice)
    begin
                ap_block_state23_pp2_stage0_iter7 <= ((icmp_ln117_reg_1944_pp2_iter6_reg = ap_const_lv1_0) and (dout_V_TREADY_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state4_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state4_assign_proc : process(icmp_ln95_fu_561_p2)
    begin
        if ((icmp_ln95_fu_561_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state16_assign_proc : process(icmp_ln117_fu_1066_p2)
    begin
        if ((icmp_ln117_fu_1066_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state16 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state24, regslice_both_dout_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and (regslice_both_dout_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10)
    begin
        if (((ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5)
    begin
        if (((ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_1_phi_fu_479_p4_assign_proc : process(i_1_reg_475, add_ln95_reg_1675, ap_CS_fsm_pp1_stage0, icmp_ln95_reg_1680, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln95_reg_1680 = ap_const_lv1_0))) then 
            ap_phi_mux_i_1_phi_fu_479_p4 <= add_ln95_reg_1675;
        else 
            ap_phi_mux_i_1_phi_fu_479_p4 <= i_1_reg_475;
        end if; 
    end process;


    ap_phi_mux_i_2_phi_fu_491_p4_assign_proc : process(ap_block_pp2_stage0, icmp_ln117_reg_1944, i_2_reg_487, add_ln117_reg_1939, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((icmp_ln117_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_i_2_phi_fu_491_p4 <= add_ln117_reg_1939;
        else 
            ap_phi_mux_i_2_phi_fu_491_p4 <= i_2_reg_487;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state24, regslice_both_dout_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and (regslice_both_dout_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cdata_M_imag_V_3_fu_997_p3 <= 
        cdata_M_imag_V_fu_895_p2 when (icmp_ln100_reg_1767_pp1_iter5_reg(0) = '1') else 
        p_r_M_imag_V_7_fu_991_p2;
    cdata_M_imag_V_fu_895_p2 <= std_logic_vector(signed(y1_M_real_reg_1754_pp1_iter5_reg) - signed(y1_M_imag_reg_1760_pp1_iter5_reg));
    cdata_M_real_V_3_fu_1004_p3 <= 
        cdata_M_real_V_fu_891_p2 when (icmp_ln100_reg_1767_pp1_iter5_reg(0) = '1') else 
        p_r_M_real_V_fu_985_p2;
    cdata_M_real_V_fu_891_p2 <= std_logic_vector(signed(y1_M_imag_reg_1760_pp1_iter5_reg) + signed(y1_M_real_reg_1754_pp1_iter5_reg));

    descramble_buf_0_M_imag_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, zext_ln92_fu_533_p1, zext_ln703_fu_597_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            descramble_buf_0_M_imag_V_address0 <= zext_ln703_fu_597_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            descramble_buf_0_M_imag_V_address0 <= zext_ln92_fu_533_p1(9 - 1 downto 0);
        else 
            descramble_buf_0_M_imag_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    descramble_buf_0_M_imag_V_address1 <= zext_ln97_fu_575_p1(9 - 1 downto 0);

    descramble_buf_0_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, din_V_TVALID_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_0_M_imag_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            descramble_buf_0_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_0_M_imag_V_d0 <= din_V_TDATA_int_regslice(63 downto 32);

    descramble_buf_0_M_imag_V_we0_assign_proc : process(ap_CS_fsm_state2, tmp_2_fu_541_p3, din_V_TVALID_int_regslice)
    begin
        if (((tmp_2_fu_541_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1))) then 
            descramble_buf_0_M_imag_V_we0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_0_M_real_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, zext_ln92_fu_533_p1, zext_ln703_fu_597_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            descramble_buf_0_M_real_V_address0 <= zext_ln703_fu_597_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            descramble_buf_0_M_real_V_address0 <= zext_ln92_fu_533_p1(9 - 1 downto 0);
        else 
            descramble_buf_0_M_real_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    descramble_buf_0_M_real_V_address1 <= zext_ln97_fu_575_p1(9 - 1 downto 0);

    descramble_buf_0_M_real_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, din_V_TVALID_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_0_M_real_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            descramble_buf_0_M_real_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_0_M_real_V_we0_assign_proc : process(ap_CS_fsm_state2, tmp_2_fu_541_p3, din_V_TVALID_int_regslice)
    begin
        if (((tmp_2_fu_541_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1))) then 
            descramble_buf_0_M_real_V_we0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_imag_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, zext_ln92_fu_533_p1, zext_ln703_fu_597_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            descramble_buf_1_M_imag_V_address0 <= zext_ln703_fu_597_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            descramble_buf_1_M_imag_V_address0 <= zext_ln92_fu_533_p1(9 - 1 downto 0);
        else 
            descramble_buf_1_M_imag_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    descramble_buf_1_M_imag_V_address1 <= zext_ln97_fu_575_p1(9 - 1 downto 0);

    descramble_buf_1_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, din_V_TVALID_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_imag_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            descramble_buf_1_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_1_M_imag_V_d0 <= din_V_TDATA_int_regslice(63 downto 32);

    descramble_buf_1_M_imag_V_we0_assign_proc : process(ap_CS_fsm_state2, tmp_2_fu_541_p3, din_V_TVALID_int_regslice)
    begin
        if (((tmp_2_fu_541_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1))) then 
            descramble_buf_1_M_imag_V_we0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_real_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, zext_ln92_fu_533_p1, zext_ln703_fu_597_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            descramble_buf_1_M_real_V_address0 <= zext_ln703_fu_597_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            descramble_buf_1_M_real_V_address0 <= zext_ln92_fu_533_p1(9 - 1 downto 0);
        else 
            descramble_buf_1_M_real_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    descramble_buf_1_M_real_V_address1 <= zext_ln97_fu_575_p1(9 - 1 downto 0);

    descramble_buf_1_M_real_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, din_V_TVALID_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_real_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            descramble_buf_1_M_real_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_real_V_we0_assign_proc : process(ap_CS_fsm_state2, tmp_2_fu_541_p3, din_V_TVALID_int_regslice)
    begin
        if (((tmp_2_fu_541_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1))) then 
            descramble_buf_1_M_real_V_we0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    din_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, din_V_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            din_V_TDATA_blk_n <= din_V_TVALID_int_regslice;
        else 
            din_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    din_V_TREADY <= regslice_both_din_V_U_ack_in;

    din_V_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state2, din_V_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (din_V_TVALID_int_regslice = ap_const_logic_1))) then 
            din_V_TREADY_int_regslice <= ap_const_logic_1;
        else 
            din_V_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    dout_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp2_iter6, ap_block_pp2_stage0, icmp_ln117_reg_1944_pp2_iter5_reg, ap_enable_reg_pp2_iter7, icmp_ln117_reg_1944_pp2_iter6_reg, dout_V_TREADY_int_regslice)
    begin
        if ((((icmp_ln117_reg_1944_pp2_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((icmp_ln117_reg_1944_pp2_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1)))) then 
            dout_V_TDATA_blk_n <= dout_V_TREADY_int_regslice;
        else 
            dout_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_V_TDATA_int_regslice <= 
        tmp_fu_1526_p3 when (icmp_ln121_reg_1999_pp2_iter5_reg(0) = '1') else 
        tmp_1_fu_1648_p3;
    dout_V_TVALID <= regslice_both_dout_V_U_vld_out;

    dout_V_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp2_iter6, icmp_ln117_reg_1944_pp2_iter5_reg, ap_block_pp2_stage0_11001)
    begin
        if (((icmp_ln117_reg_1944_pp2_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))) then 
            dout_V_TVALID_int_regslice <= ap_const_logic_1;
        else 
            dout_V_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    f_M_imag_V_1_fu_1596_p3 <= 
        sub_ln1148_15_fu_1590_p2 when (tmp_14_fu_1567_p3(0) = '1') else 
        sext_ln1148_5_fu_1586_p1;
    f_M_imag_V_fu_949_p3 <= 
        sub_ln1148_7_fu_935_p2 when (tmp_6_fu_928_p3(0) = '1') else 
        trunc_ln1148_6_fu_940_p4;
    f_M_real_V_1_fu_1559_p3 <= 
        sub_ln1148_13_fu_1554_p2 when (tmp_13_fu_1534_p3(0) = '1') else 
        sext_ln1148_3_fu_1550_p1;
    f_M_real_V_fu_920_p3 <= 
        sub_ln1148_5_fu_906_p2 when (tmp_5_fu_899_p3(0) = '1') else 
        trunc_ln1148_3_fu_911_p4;

    filter_buf_0_M_imag_V_address0_assign_proc : process(ap_block_pp2_stage0, filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter9_reg, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter10, ap_block_pp1_stage0, zext_ln703_1_fu_1098_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_buf_0_M_imag_V_address0 <= zext_ln703_1_fu_1098_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1))) then 
            filter_buf_0_M_imag_V_address0 <= filter_buf_0_M_imag_V_addr_2_reg_1740_pp1_iter9_reg;
        else 
            filter_buf_0_M_imag_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    filter_buf_0_M_imag_V_address1 <= zext_ln119_fu_1080_p1(9 - 1 downto 0);

    filter_buf_0_M_imag_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp1_iter10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)))) then 
            filter_buf_0_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            filter_buf_0_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_0_M_imag_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_buf_0_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            filter_buf_0_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_0_M_imag_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln97_reg_1750_pp1_iter9_reg, ap_enable_reg_pp1_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (icmp_ln97_reg_1750_pp1_iter9_reg = ap_const_lv1_1))) then 
            filter_buf_0_M_imag_V_we0 <= ap_const_logic_1;
        else 
            filter_buf_0_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_0_M_real_V_address0_assign_proc : process(ap_block_pp2_stage0, filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter9_reg, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter10, ap_block_pp1_stage0, zext_ln703_1_fu_1098_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_buf_0_M_real_V_address0 <= zext_ln703_1_fu_1098_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1))) then 
            filter_buf_0_M_real_V_address0 <= filter_buf_0_M_real_V_addr_2_reg_1730_pp1_iter9_reg;
        else 
            filter_buf_0_M_real_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    filter_buf_0_M_real_V_address1 <= zext_ln119_fu_1080_p1(9 - 1 downto 0);

    filter_buf_0_M_real_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp1_iter10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)))) then 
            filter_buf_0_M_real_V_ce0 <= ap_const_logic_1;
        else 
            filter_buf_0_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_0_M_real_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_buf_0_M_real_V_ce1 <= ap_const_logic_1;
        else 
            filter_buf_0_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_0_M_real_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln97_reg_1750_pp1_iter9_reg, ap_enable_reg_pp1_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (icmp_ln97_reg_1750_pp1_iter9_reg = ap_const_lv1_1))) then 
            filter_buf_0_M_real_V_we0 <= ap_const_logic_1;
        else 
            filter_buf_0_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_1_M_imag_V_address0_assign_proc : process(ap_block_pp2_stage0, filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter9_reg, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter10, ap_block_pp1_stage0, zext_ln703_1_fu_1098_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_buf_1_M_imag_V_address0 <= zext_ln703_1_fu_1098_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1))) then 
            filter_buf_1_M_imag_V_address0 <= filter_buf_1_M_imag_V_addr_2_reg_1745_pp1_iter9_reg;
        else 
            filter_buf_1_M_imag_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    filter_buf_1_M_imag_V_address1 <= zext_ln119_fu_1080_p1(9 - 1 downto 0);

    filter_buf_1_M_imag_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp1_iter10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)))) then 
            filter_buf_1_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            filter_buf_1_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_1_M_imag_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_buf_1_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            filter_buf_1_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_1_M_imag_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln97_reg_1750_pp1_iter9_reg, ap_enable_reg_pp1_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (icmp_ln97_reg_1750_pp1_iter9_reg = ap_const_lv1_0))) then 
            filter_buf_1_M_imag_V_we0 <= ap_const_logic_1;
        else 
            filter_buf_1_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_1_M_real_V_address0_assign_proc : process(ap_block_pp2_stage0, filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter9_reg, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter10, ap_block_pp1_stage0, zext_ln703_1_fu_1098_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_buf_1_M_real_V_address0 <= zext_ln703_1_fu_1098_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1))) then 
            filter_buf_1_M_real_V_address0 <= filter_buf_1_M_real_V_addr_2_reg_1735_pp1_iter9_reg;
        else 
            filter_buf_1_M_real_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    filter_buf_1_M_real_V_address1 <= zext_ln119_fu_1080_p1(9 - 1 downto 0);

    filter_buf_1_M_real_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp1_iter10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)))) then 
            filter_buf_1_M_real_V_ce0 <= ap_const_logic_1;
        else 
            filter_buf_1_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_1_M_real_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            filter_buf_1_M_real_V_ce1 <= ap_const_logic_1;
        else 
            filter_buf_1_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    filter_buf_1_M_real_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln97_reg_1750_pp1_iter9_reg, ap_enable_reg_pp1_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (icmp_ln97_reg_1750_pp1_iter9_reg = ap_const_lv1_0))) then 
            filter_buf_1_M_real_V_we0 <= ap_const_logic_1;
        else 
            filter_buf_1_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_rom_address0 <= zext_ln95_fu_613_p1(10 - 1 downto 0);

    filter_rom_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            filter_rom_ce0 <= ap_const_logic_1;
        else 
            filter_rom_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    g_M_imag_V_1_fu_1312_p3 <= 
        sub_ln1148_19_fu_1306_p2 when (tmp_16_reg_2027(0) = '1') else 
        sext_ln1148_8_fu_1303_p1;
    g_M_imag_V_fu_803_p3 <= 
        sub_ln1148_11_fu_797_p2 when (tmp_8_reg_1790(0) = '1') else 
        trunc_ln1148_4_reg_1795;
    g_M_real_V_1_fu_1276_p3 <= 
        trunc_ln1148_17_fu_1266_p4 when (tmp_15_fu_1232_p3(0) = '1') else 
        sub_ln1148_17_fu_1260_p2;
    g_M_real_V_fu_774_p3 <= 
        trunc_ln1148_9_fu_764_p4 when (tmp_7_fu_734_p3(0) = '1') else 
        sub_ln1148_9_fu_758_p2;
    grp_fu_1025_p1 <= zext_ln1118_fu_1021_p1(30 - 1 downto 0);
    grp_fu_1034_p1 <= zext_ln1118_fu_1021_p1(30 - 1 downto 0);

    grp_fu_1340_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1340_ce <= ap_const_logic_1;
        else 
            grp_fu_1340_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1340_p0 <= sext_ln1115_4_fu_1333_p1(32 - 1 downto 0);
    grp_fu_1340_p1 <= sext_ln1118_2_fu_1337_p1(32 - 1 downto 0);

    grp_fu_1360_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1360_ce <= ap_const_logic_1;
        else 
            grp_fu_1360_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1360_p1 <= grp_fu_1360_p10(31 - 1 downto 0);
    grp_fu_1360_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_10_fu_1326_p3),62));

    grp_fu_1366_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1366_ce <= ap_const_logic_1;
        else 
            grp_fu_1366_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1366_p0 <= sext_ln1115_4_fu_1333_p1(32 - 1 downto 0);

    grp_fu_1372_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1372_ce <= ap_const_logic_1;
        else 
            grp_fu_1372_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1372_p0 <= sext_ln1118_2_fu_1337_p1(32 - 1 downto 0);
    grp_fu_1372_p1 <= grp_fu_1372_p10(31 - 1 downto 0);
    grp_fu_1372_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_10_fu_1326_p3),63));
    grp_fu_830_p0 <= sext_ln1115_fu_823_p1(32 - 1 downto 0);
    grp_fu_830_p1 <= sext_ln1118_fu_827_p1(32 - 1 downto 0);
    grp_fu_843_p0 <= sext_ln1115_1_fu_836_p1(32 - 1 downto 0);
    grp_fu_843_p1 <= sext_ln1118_1_fu_840_p1(32 - 1 downto 0);
    grp_fu_849_p0 <= sext_ln1115_fu_823_p1(32 - 1 downto 0);
    grp_fu_849_p1 <= sext_ln1118_1_fu_840_p1(32 - 1 downto 0);
    grp_fu_855_p0 <= sext_ln1115_1_fu_836_p1(32 - 1 downto 0);
    grp_fu_855_p1 <= sext_ln1118_fu_827_p1(32 - 1 downto 0);
    i_fu_499_p2 <= std_logic_vector(unsigned(i_3171_reg_464) + unsigned(ap_const_lv10_1));
    icmp_ln100_fu_652_p2 <= "1" when (i_1_reg_475 = ap_const_lv11_0) else "0";
    icmp_ln117_fu_1066_p2 <= "1" when (ap_phi_mux_i_2_phi_fu_491_p4 = ap_const_lv11_400) else "0";
    icmp_ln119_fu_1130_p2 <= "1" when (tmp_9_fu_1120_p4 = ap_const_lv2_0) else "0";
    icmp_ln121_fu_1152_p2 <= "1" when (i_2_reg_487 = ap_const_lv11_0) else "0";
    icmp_ln86_fu_549_p2 <= "1" when (i_3171_reg_464 = ap_const_lv10_3FF) else "0";
    icmp_ln95_fu_561_p2 <= "1" when (ap_phi_mux_i_1_phi_fu_479_p4 = ap_const_lv11_400) else "0";
    icmp_ln97_fu_630_p2 <= "1" when (tmp_3_fu_620_p4 = ap_const_lv2_0) else "0";
    lhs_V_fu_1136_p3 <= 
        filter_buf_0_M_real_V_q1 when (icmp_ln119_fu_1130_p2(0) = '1') else 
        filter_buf_1_M_real_V_q1;
    p_r_M_imag_V_6_fu_1642_p2 <= std_logic_vector(unsigned(trunc_ln708_3_fu_1626_p4) + unsigned(f_M_imag_V_1_fu_1596_p3));
    p_r_M_imag_V_7_fu_991_p2 <= std_logic_vector(unsigned(trunc_ln6_fu_975_p4) + unsigned(f_M_imag_V_fu_949_p3));
    p_r_M_real_V_6_fu_1636_p2 <= std_logic_vector(unsigned(p_r_V_2_fu_1612_p4) + unsigned(f_M_real_V_1_fu_1559_p3));
    p_r_M_real_V_fu_985_p2 <= std_logic_vector(unsigned(p_r_V_fu_961_p4) + unsigned(f_M_real_V_fu_920_p3));
    p_r_V_2_fu_1612_p4 <= ret_V_12_fu_1607_p2(62 downto 31);
    p_r_V_fu_961_p4 <= ret_V_4_fu_957_p2(62 downto 31);
    r_V_10_fu_1326_p3 <= (twid_rom_conj_M_imag_V_load_reg_2076 & ap_const_lv8_0);
    r_V_11_fu_1319_p3 <= (twid_rom_conj_M_real_V_load_reg_2071 & ap_const_lv8_0);
    r_V_2_fu_816_p3 <= (twid_rom_M_imag_V_load_reg_1837 & ap_const_lv8_0);
    r_V_fu_809_p3 <= (twid_rom_M_real_V_load_reg_1832 & ap_const_lv8_0);
    ret_V_10_fu_1222_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_1210_p1) + signed(sext_ln703_4_fu_1213_p1));
    ret_V_12_fu_1607_p2 <= std_logic_vector(unsigned(r_V_12_reg_2137) - unsigned(sext_ln1115_5_fu_1604_p1));
    ret_V_13_fu_1622_p2 <= std_logic_vector(unsigned(r_V_15_reg_2152) + unsigned(r_V_14_reg_2147));
    ret_V_14_fu_686_p2 <= std_logic_vector(signed(sext_ln703_1_fu_682_p1) + signed(sext_ln703_fu_658_p1));
    ret_V_15_fu_722_p2 <= std_logic_vector(signed(sext_ln703_3_fu_719_p1) + signed(sext_ln703_2_fu_716_p1));
    ret_V_16_fu_692_p2 <= std_logic_vector(signed(sext_ln703_1_fu_682_p1) - signed(sext_ln703_fu_658_p1));
    ret_V_17_fu_1378_p2 <= std_logic_vector(signed(sext_ln1192_1_reg_2047_pp2_iter4_reg) + signed(sext_ln1192_reg_2004_pp2_iter4_reg));
    ret_V_18_fu_1382_p2 <= std_logic_vector(signed(sext_ln1192_reg_2004_pp2_iter4_reg) - signed(sext_ln1192_1_reg_2047_pp2_iter4_reg));
    ret_V_19_fu_1180_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_1176_p1) + signed(sext_ln1192_fu_1158_p1));
    ret_V_20_fu_1216_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_1210_p1) - signed(sext_ln703_4_fu_1213_p1));
    ret_V_21_fu_1186_p2 <= std_logic_vector(signed(sext_ln1192_fu_1158_p1) - signed(sext_ln1192_3_fu_1176_p1));
    ret_V_4_fu_957_p2 <= std_logic_vector(unsigned(r_V_1_reg_1881) - unsigned(r_V_3_reg_1886));
    ret_V_5_fu_971_p2 <= std_logic_vector(unsigned(r_V_5_reg_1896) + unsigned(r_V_4_reg_1891));
    ret_V_fu_728_p2 <= std_logic_vector(signed(sext_ln703_3_fu_719_p1) - signed(sext_ln703_2_fu_716_p1));
    rhs_4_fu_1169_p3 <= 
        filter_buf_1_M_real_V_q0 when (tmp_12_reg_1978(0) = '1') else 
        filter_buf_0_M_real_V_q0;
    rhs_5_fu_669_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(select_ln703_fu_662_p3));
    rhs_6_fu_1144_p3 <= 
        filter_buf_0_M_imag_V_q1 when (icmp_ln119_fu_1130_p2(0) = '1') else 
        filter_buf_1_M_imag_V_q1;
    rhs_fu_675_p3 <= 
        descramble_buf_1_M_real_V_q0 when (tmp_4_reg_1714(0) = '1') else 
        descramble_buf_0_M_real_V_q0;
    select_ln1148_1_fu_1518_p3 <= 
        sub_ln1148_3_fu_1512_p2 when (tmp_11_fu_1473_p3(0) = '1') else 
        sext_ln1148_2_fu_1508_p1;
    select_ln1148_fu_1465_p3 <= 
        sub_ln1148_1_fu_1459_p2 when (tmp_10_fu_1423_p3(0) = '1') else 
        sext_ln1148_fu_1455_p1;
    select_ln703_2_fu_1162_p3 <= 
        filter_buf_1_M_imag_V_q0 when (tmp_12_reg_1978(0) = '1') else 
        filter_buf_0_M_imag_V_q0;
    select_ln703_fu_662_p3 <= 
        descramble_buf_1_M_imag_V_q0 when (tmp_4_reg_1714(0) = '1') else 
        descramble_buf_0_M_imag_V_q0;
        sext_ln1115_1_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_2_fu_816_p3),63));

        sext_ln1115_4_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_11_fu_1319_p3),63));

        sext_ln1115_5_fu_1604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_13_reg_2142),63));

        sext_ln1115_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_809_p3),63));

        sext_ln1118_1_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(g_M_imag_V_reg_1827),63));

        sext_ln1118_2_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(g_M_real_V_1_reg_2060),63));

        sext_ln1118_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(g_M_real_V_reg_1822),63));

        sext_ln1148_1_fu_1495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_10_fu_1485_p4),32));

        sext_ln1148_2_fu_1508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_11_fu_1499_p4),32));

        sext_ln1148_3_fu_1550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_13_fu_1541_p4),32));

        sext_ln1148_4_fu_1574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_14_reg_2132),32));

        sext_ln1148_5_fu_1586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_15_fu_1577_p4),32));

        sext_ln1148_6_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_16_fu_1246_p4),32));

        sext_ln1148_7_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_18_fu_1289_p4),32));

        sext_ln1148_8_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_19_reg_2032),32));

        sext_ln1148_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1148_7_fu_1446_p4),32));

        sext_ln1192_1_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_6_reg_1994),32));

        sext_ln1192_2_fu_1420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_17_reg_2113),33));

        sext_ln1192_3_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_4_fu_1169_p3),32));

        sext_ln1192_4_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_19_reg_2015_pp2_iter4_reg),33));

        sext_ln1192_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_1136_p3),32));

        sext_ln1193_fu_1228_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_10_fu_1222_p2),33));

        sext_ln703_1_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_fu_675_p3),33));

        sext_ln703_2_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y1_M_imag_reg_1760),33));

        sext_ln703_3_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_5_reg_1773),33));

        sext_ln703_4_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln703_2_reg_2010),32));

        sext_ln703_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y1_M_real_fu_636_p3),33));

    shl_ln_fu_1011_p3 <= (filter_rom_load_reg_1842_pp1_iter6_reg & ap_const_lv8_0);
    sub_ln1148_10_fu_782_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(ret_V_16_reg_1785));
    sub_ln1148_11_fu_797_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(trunc_ln1148_s_fu_787_p4));
    sub_ln1148_12_fu_1389_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(sext_ln1192_4_fu_1386_p1));
    sub_ln1148_13_fu_1554_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(trunc_ln1148_12_reg_2127));
    sub_ln1148_14_fu_1405_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ret_V_20_reg_2053_pp2_iter4_reg));
    sub_ln1148_15_fu_1590_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sext_ln1148_4_fu_1574_p1));
    sub_ln1148_16_fu_1240_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(sext_ln1193_fu_1228_p1));
    sub_ln1148_17_fu_1260_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sext_ln1148_6_fu_1256_p1));
    sub_ln1148_18_fu_1284_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ret_V_21_reg_2022));
    sub_ln1148_19_fu_1306_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sext_ln1148_7_fu_1299_p1));
    sub_ln1148_1_fu_1459_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(trunc_ln1148_1_fu_1436_p4));
    sub_ln1148_2_fu_1480_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ret_V_18_reg_2120));
    sub_ln1148_3_fu_1512_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sext_ln1148_1_fu_1495_p1));
    sub_ln1148_4_fu_861_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(ret_V_14_reg_1778_pp1_iter4_reg));
    sub_ln1148_5_fu_906_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(trunc_ln1148_2_reg_1871));
    sub_ln1148_6_fu_876_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(ret_V_15_reg_1815_pp1_iter4_reg));
    sub_ln1148_7_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(trunc_ln1148_5_reg_1876));
    sub_ln1148_8_fu_742_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(ret_V_fu_728_p2));
    sub_ln1148_9_fu_758_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(trunc_ln1148_8_fu_748_p4));
    sub_ln1148_fu_1430_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(sext_ln1192_2_fu_1420_p1));
    sub_ln703_2_fu_1088_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(trunc_ln117_fu_1072_p1));
    sub_ln703_fu_587_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(trunc_ln95_fu_567_p1));
    tmp_10_fu_1423_p3 <= ret_V_17_reg_2113(31 downto 31);
    tmp_11_fu_1473_p3 <= ret_V_18_reg_2120(31 downto 31);
    tmp_13_fu_1534_p3 <= ret_V_19_reg_2015_pp2_iter5_reg(31 downto 31);
    tmp_14_fu_1567_p3 <= ret_V_20_reg_2053_pp2_iter5_reg(31 downto 31);
    tmp_15_fu_1232_p3 <= ret_V_10_fu_1222_p2(31 downto 31);
    tmp_1_fu_1648_p3 <= (p_r_M_imag_V_6_fu_1642_p2 & p_r_M_real_V_6_fu_1636_p2);
    tmp_2_fu_541_p3 <= i_3171_reg_464(0 downto 0);
    tmp_3_fu_620_p4 <= i_1_reg_475(10 downto 9);
    tmp_5_fu_899_p3 <= ret_V_14_reg_1778_pp1_iter5_reg(32 downto 32);
    tmp_6_fu_928_p3 <= ret_V_15_reg_1815_pp1_iter5_reg(32 downto 32);
    tmp_7_fu_734_p3 <= ret_V_fu_728_p2(32 downto 32);
    tmp_9_fu_1120_p4 <= i_2_reg_487(10 downto 9);
    tmp_fu_1526_p3 <= (select_ln1148_1_fu_1518_p3 & select_ln1148_fu_1465_p3);
    trunc_ln1148_10_fu_1485_p4 <= sub_ln1148_2_fu_1480_p2(31 downto 1);
    trunc_ln1148_11_fu_1499_p4 <= ret_V_18_reg_2120(31 downto 1);
    trunc_ln1148_13_fu_1541_p4 <= ret_V_19_reg_2015_pp2_iter5_reg(31 downto 1);
    trunc_ln1148_15_fu_1577_p4 <= ret_V_20_reg_2053_pp2_iter5_reg(31 downto 1);
    trunc_ln1148_16_fu_1246_p4 <= ret_V_10_fu_1222_p2(31 downto 1);
    trunc_ln1148_17_fu_1266_p4 <= sub_ln1148_16_fu_1240_p2(32 downto 1);
    trunc_ln1148_18_fu_1289_p4 <= sub_ln1148_18_fu_1284_p2(31 downto 1);
    trunc_ln1148_1_fu_1436_p4 <= sub_ln1148_fu_1430_p2(32 downto 1);
    trunc_ln1148_3_fu_911_p4 <= ret_V_14_reg_1778_pp1_iter5_reg(32 downto 1);
    trunc_ln1148_6_fu_940_p4 <= ret_V_15_reg_1815_pp1_iter5_reg(32 downto 1);
    trunc_ln1148_7_fu_1446_p4 <= ret_V_17_reg_2113(31 downto 1);
    trunc_ln1148_8_fu_748_p4 <= ret_V_fu_728_p2(32 downto 1);
    trunc_ln1148_9_fu_764_p4 <= sub_ln1148_8_fu_742_p2(32 downto 1);
    trunc_ln1148_s_fu_787_p4 <= sub_ln1148_10_fu_782_p2(32 downto 1);
    trunc_ln117_fu_1072_p1 <= ap_phi_mux_i_2_phi_fu_491_p4(10 - 1 downto 0);
    trunc_ln119_fu_1076_p1 <= ap_phi_mux_i_2_phi_fu_491_p4(9 - 1 downto 0);
    trunc_ln145_fu_505_p1 <= din_V_TDATA_int_regslice(32 - 1 downto 0);
    
    trunc_ln1_fu_523_p4_proc : process(i_3171_reg_464)
    variable vlo_cpy : STD_LOGIC_VECTOR(10+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(10+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(10 - 1 downto 0);
    variable trunc_ln1_fu_523_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(10 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(10 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(10 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_9(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_1(4 - 1 downto 0);
        v0_cpy := i_3171_reg_464;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(10-1-unsigned(ap_const_lv32_1(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(10-1-unsigned(ap_const_lv32_9(4-1 downto 0)));
            for trunc_ln1_fu_523_p4_i in 0 to 10-1 loop
                v0_cpy(trunc_ln1_fu_523_p4_i) := i_3171_reg_464(10-1-trunc_ln1_fu_523_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(10-1 downto 0)))));
        res_mask := res_mask(10-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        trunc_ln1_fu_523_p4 <= resvalue(9-1 downto 0);
    end process;

    trunc_ln6_fu_975_p4 <= ret_V_5_fu_971_p2(62 downto 31);
    trunc_ln703_1_fu_1094_p1 <= sub_ln703_2_fu_1088_p2(9 - 1 downto 0);
    trunc_ln703_fu_593_p1 <= sub_ln703_fu_587_p2(9 - 1 downto 0);
    trunc_ln708_3_fu_1626_p4 <= ret_V_13_fu_1622_p2(62 downto 31);
    trunc_ln95_fu_567_p1 <= ap_phi_mux_i_1_phi_fu_479_p4(10 - 1 downto 0);
    trunc_ln97_fu_571_p1 <= ap_phi_mux_i_1_phi_fu_479_p4(9 - 1 downto 0);
    twid_rom_M_imag_V_address0 <= zext_ln95_fu_613_p1(10 - 1 downto 0);

    twid_rom_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            twid_rom_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            twid_rom_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twid_rom_M_real_V_address0 <= zext_ln95_fu_613_p1(10 - 1 downto 0);

    twid_rom_M_real_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            twid_rom_M_real_V_ce0 <= ap_const_logic_1;
        else 
            twid_rom_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twid_rom_conj_M_imag_V_address0 <= zext_ln117_fu_1114_p1(10 - 1 downto 0);

    twid_rom_conj_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            twid_rom_conj_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            twid_rom_conj_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twid_rom_conj_M_real_V_address0 <= zext_ln117_fu_1114_p1(10 - 1 downto 0);

    twid_rom_conj_M_real_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            twid_rom_conj_M_real_V_ce0 <= ap_const_logic_1;
        else 
            twid_rom_conj_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    y1_M_imag_fu_644_p3 <= 
        descramble_buf_0_M_imag_V_q1 when (icmp_ln97_fu_630_p2(0) = '1') else 
        descramble_buf_1_M_imag_V_q1;
    y1_M_real_fu_636_p3 <= 
        descramble_buf_0_M_real_V_q1 when (icmp_ln97_fu_630_p2(0) = '1') else 
        descramble_buf_1_M_real_V_q1;
    zext_ln1118_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1011_p3),62));
    zext_ln117_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_487),64));
    zext_ln119_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln119_fu_1076_p1),64));
    zext_ln703_1_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln703_1_fu_1094_p1),64));
    zext_ln703_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln703_fu_593_p1),64));
    zext_ln92_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1_fu_523_p4),64));
    zext_ln95_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_475),64));
    zext_ln97_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln97_fu_571_p1),64));
end behav;
